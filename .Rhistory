startup_country_graph <- startup_country %>%
group_by(country_name) %>%
summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%
arrange(desc(country_total)) %>%
print()
# Graph investment deals and number of transactions of highest 10 countries in 2021
startup_country_graph %>%
arrange(country_total) %>%
mutate(Country=factor(country_name, country_name)) %>%
top_n(n = 10, wt = country_total) %>%
ggplot(aes(x = Country, y = country_total)) +
geom_col(stat = "identity", fill="#69b3a2") +
coord_flip() +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(y = "Total Value of Deals", title = "Value of Startup Deals in 2021")
startup_country_graph %>%
arrange(country_number) %>%
mutate(Country=factor(country_name, country_name)) %>%
top_n(n = 10, wt = country_number) %>%
ggplot(aes(x = Country, y = country_number)) +
geom_col(stat="identity", fill="#69b3a2") +
coord_flip() +
labs(y = "Number of Deals", title = "Number of Startup Deals in 2021")
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col() +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ","))
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col(stat="identity", fill="#69b3a2") +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(x = "Investor Type", y = "Total Value of Deals")
# Generate Unique id for each transaction and calculate number of investors as a new column "count"
id_count <- startup %>%
mutate(id = 1:dim(startup)[1]) %>%
separate_rows(`Investor's_Origin`, sep = ", ") %>%
group_by(id) %>%
summarize(id_count = n()) %>%
pull(id_count)
# Add id_count to startup
startup_country <- startup %>%
mutate(id_count) %>%
separate_rows(`Investor's_Origin`, sep = ", ") %>%
mutate(new_value = `Deal_Value_(USD)` / id_count) %>%
mutate(country_name = gsub(pattern = "\r\n", replacement = "", x = .$`Investor's_Origin`)) %>%
filter(country_name != "NA")
startup_country_graph <- startup_country %>%
group_by(country_name) %>%
summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%
arrange(desc(country_total)) %>%
print()
# Graph investment deals and number of transactions of highest 10 countries in 2021
startup_country_graph %>%
arrange(country_total) %>%
mutate(Country=factor(country_name, country_name)) %>%
top_n(n = 10, wt = country_total) %>%
ggplot(aes(x = Country, y = country_total)) +
geom_col(stat = "identity", fill="#69b3a2") +
coord_flip() +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(y = "Total Value of Deals", title = "Value of Startup Deals in 2021") +
theme_bw()
startup_country_graph %>%
arrange(country_number) %>%
mutate(Country=factor(country_name, country_name)) %>%
top_n(n = 10, wt = country_number) %>%
ggplot(aes(x = Country, y = country_number)) +
geom_col(stat="identity", fill="#69b3a2") +
coord_flip() +
labs(y = "Number of Deals", title = "Number of Startup Deals in 2021") +
theme_bw()
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col(stat="identity", fill="#69b3a2") +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(x = "Investor Type", y = "Total Value of Deals") +
theme_bw()
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
mutate(type = factor(type, type)) %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col(stat="identity", fill="#69b3a2") +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(x = "Investor Type", y = "Total Value of Deals") +
theme_bw()
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
mutate(type = factor(type)) %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col(stat="identity", fill="#69b3a2") +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(x = "Investor Type", y = "Total Value of Deals") +
theme_bw()
# Categorizing investors as foreign and local
# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.
local_foreign <- startup_country %>%
group_by(Announcement_Date) %>%
summarize(local = sum(new_value[country_name == "Turkey"], na.rm = TRUE), foreign = sum(new_value[country_name != "Turkey"], na.rm = TRUE))
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
ggplot(aes(x = type, y = deal_value)) +
geom_col(stat="identity", fill="#69b3a2") +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ",")) +
labs(x = "Investor Type", y = "Total Value of Deals") +
theme_bw()
install.packages("viridis")
swd(/Users/yigitonay/Desktop/calton/MEF/BDA_503/startup)
cwd(/Users/yigitonay/Desktop/calton/MEF/BDA_503/startup)
setwd(/Users/yigitonay/Desktop/calton/MEF/BDA_503/startup)
getwd()
setwd("/Users/yigitonay/Desktop/calton/MEF/BDA_503/startup")
library(readxl)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
startup <- read_excel("/Users/yigitonay/Desktop/calton/MEF/BDA_503/startup/startup_deals_2021.xlsx", guess_max = Inf)
colnames(startup) <- startup %>%
colnames() %>%
gsub(" ", "_", .)
str(startup)
startup$`Deal_Value_(USD)` <- as.numeric(startup$`Deal_Value_(USD)`)
startup$`Stake_(%)` <- startup$`Stake_(%)` %>%
gsub("\\..*", "", .) %>%
gsub("%", "", .) %>%
as.numeric()
startup$Announcement_Date <- startup$Announcement_Date %>%
paste("01", ., sep = "") %>%
parse_date_time(., "dmy")
str(startup)
# New columns for months and years
startup$year <- year(startup$Announcement_Date)
startup$month <- month(startup$Announcement_Date)
str(startup)
top_5_sector_table <- startup %>%
group_by(Sector) %>%
summarize(total_value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>%
arrange(desc(total_value)) %>%
top_n(n = 5)
top_5_sector <- top_5_sector_table %>%
select(Sector) %>%
pull()
print(top_5_sector)
# Create a new variable that classify sectors as "other" than top_5 as others
startup <- startup %>%
mutate(group_sector = case_when(Sector %in% top_5_sector ~ Sector,!(Sector %in% top_5_sector) ~ "Other"))
# Plotting monthly investment values of top_5_sectors and others
startup %>%
group_by(Announcement_Date, group_sector) %>%
summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>%
ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +
geom_col() +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ","))
library(scales)
# Plotting monthly investment values of top_5_sectors and others
startup %>%
group_by(Announcement_Date, group_sector) %>%
summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>%
ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +
geom_col() +
scale_y_continuous(labels = comma_format(big.mark = ".",
decimal.mark = ","))
startup_percent <- startup %>%
group_by(Target_Company) %>%
summarize(Total_Deal_Value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>%
mutate(percent = Total_Deal_Value / sum(Total_Deal_Value) * 100) %>%
arrange(desc(percent)) %>%
mutate(group_company = case_when(Target_Company %in% Target_Company[1:4] ~ Target_Company, !(Target_Company %in% Target_Company[1:4])~"others"))
startup_percent[1:4,] %>%
summarize(Total_Value = sum(Total_Deal_Value), percentage = sum(percent))
startup_percent
startup_percent_group <- startup_percent %>%
group_by(group_company) %>%
summarize(group_percent = sum(percent, na.rm = TRUE)) %>%
arrange(desc(group_percent)) %>%
mutate(cum = cumsum(group_percent))
startup_percent_group
startup_percent_group %>%
ggplot(aes(x = group_company, y = group_percent)) +
geom_col(fill = "blue")
startup_percent_group %>%
ggplot(aes(x = group_company, y = group_percent)) +
geom_col(fill = "dark blue")
startup_percent$percent[1:4] %>% sum()
# Generate Unique id for each transaction and calculate number of investors as a new column "count"
id_count <- startup %>%
mutate(id = 1:dim(startup)[1]) %>%
separate_rows(`Investor's_Origin`, sep = ", ") %>%
group_by(id) %>%
summarize(id_count = n()) %>%
pull(id_count)
id_count
# Add id_count to startup
startup_country <- startup %>%
mutate(id_count) %>%
separate_rows(`Investor's_Origin`, sep = ", ") %>%
mutate(new_value = `Deal_Value_(USD)` / id_count) %>%
mutate(country_name = gsub(pattern = "\r\n", replacement = "", x = .$`Investor's_Origin`)) %>%
filter(country_name != "NA")
startup_country
startup_country$`Investor's_Origin`
startup_country$`Investor's_Origin` %>% unique()
startup_country$`Investor's_Origin` %>% unique() %>% length()
startup_country %>% gsub(pattern = "\r\n", replacement = "", x = .$`Investor's_Origin`))
gsub(pattern = "\r\n", replacement = "", x = startup_country$`Investor's_Origin`))
gsub(pattern = "\r\n", replacement = "", x = startup_country$`Investor's_Origin`)
# Add id_count to startup
startup_country <- startup %>%
mutate(id_count) %>%
separate_rows(`Investor's_Origin`, sep = ", ") %>%
mutate(new_value = `Deal_Value_(USD)` / id_count) %>%
mutate(country_name = gsub(pattern = "\r\n", replacement = "", x = .$`Investor's_Origin`)) %>%
filter(country_name != "NA")
startup_country$`Investor's_Origin` %>% unique()
startup_country$country_name %>% unique()
install.packages("maps")
library(maps)
world_map <- map_data("world")
world_map
startup_country_graph
world_map <- subset(world_map, region != "Antarctica")
ggplot(startup_country_graph) +
geom_map(data = world_map, map = world_map, aes(map_id = region), fill = "white", color = "#7f7f7f", size = 0.25)
ggplot(startup_country_graph) +
geom_map(data = world_map, map = world_map, aes(map_id = region), fill = "white", color = "#7f7f7f", size = 0.25)
world_map
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = n), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.5
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.5) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.5
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.75) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.75
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments")
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Startup Investments (Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Investments (Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
#
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Investments \n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
#
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#fff7bc", high = "#cc4c02", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
scale_fill_gradient(low = #132B43", high = "#56B1F7", name = "Investments\n(Million USD)") +
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
s
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#132B43", high = "#56B1F7", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
world_map$region
startup_country_graph
startup_country_graph$country_name
world_map$region %>% unique()
startup_country_graph$country_name == "UAE"
startup_country_graph$country_name[startup_country_graph$country_name == "UAE"]
world_map$region %>% unique()
world_map$region %>% unique()
startup_country_graph
world_map$region
world_map$region %>% unique()
startup_country_graph
startup_country_graph$country_name[startup_country_graph$country_name == "Qatar"]
startup_country_graph$country_name[startup_country_graph$country_name == "UAE"] = "United Arab Emirates"
startup_country_graph
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat)
world_map$region %>% unique()
library(maps)
local_foreign
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
print()
local_foreign %>%
pivot_longer(cols = c(local, foreign),names_to = "type", values_to = "deal_value") %>%
group_by(type) %>%
summarize(Sum = sum(deal_value)) %>%
print()
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.title.x = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text.x = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text.x = element_blank(), axis.title.x = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text.x = element_blank(), axis.title.x = element_blank(), axis.ticks = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.75) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.5) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
# World heat map plot
ggplot(startup_country_graph) +
geom_map(
dat = world_map, map = world_map, aes(map_id = region),
fill = "white", color = "#7f7f7f", size = 0.25
) +
geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +
scale_fill_gradient(low = "#56B1F7", high = "#132B43", name = "Investments\n(Million USD)") +
expand_limits(x = world_map$long, y = world_map$lat) + labs(title = "Geographic Distribution of Startup Investments in 2021") +
theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())
