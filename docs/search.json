[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time and Space Progress Journal",
    "section": "",
    "text": "Introduction\nImage Source\nThis progress journal covers Time and Space’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "2 Key Takeaways"
  },
  {
    "objectID": "assignment1.html#key-takeaways",
    "href": "assignment1.html#key-takeaways",
    "title": "1  Assignment 1",
    "section": "1.1 Key Takeaways",
    "text": "1.1 Key Takeaways\n\nTop 5 sectors that are invested most in terms of total value are Ecommerce enabler, Delivery and Logistics, Gaming, SaaS and Fintech respectively.\nMost of the investment deals are sealed during period from June 2021 to August 2021\nRegarding the distribution of investments made to the target companies, first 4 startups, namely Trendyol, Getir, Hepsiburada and Dream Games, attracted a total of 3.4 billion USD approximately and accounted for 89.2% of all investments made in 2021.\nThe share of local investors, with a total investment value of 273 million USD, is limited and majority of the investments are made by foreign investors with a total value of 3.5 billion USD.\nMost of the investors by far the most are from Turkey in terms of number of deals, where as United States, UAE and Qatar are leading countries of investors in terms of value invested in startups."
  },
  {
    "objectID": "assignment1.html#data-preparation",
    "href": "assignment1.html#data-preparation",
    "title": "1  Assignment 1",
    "section": "3.1 Data Preparation",
    "text": "3.1 Data Preparation\nNecessary data manipulation operations are made to prepare raw data for further analysis.\n\n#read data\nstartup <- read_excel(\"startup_deals_2021.xlsx\")\n\n# Convert spaces to underscore in column names\ncolnames(startup) <- startup %>% \n  colnames() %>% \n  gsub(\" \", \"_\", .)\n\n# Convert data type of numeric columns from string to numeric\nstartup$`Deal_Value_(USD)` <- as.numeric(startup$`Deal_Value_(USD)`)\n\n# Convert percentages to numeric format\nstartup$`Stake_(%)` <- startup$`Stake_(%)` %>% \n  gsub(\"\\\\..*\", \"\", .) %>% \n  gsub(\"%\", \"\", .) %>% \n  as.numeric()\n\n# Convert string date to date format\nstartup$Announcement_Date <- startup$Announcement_Date %>% \n  paste(\"01\", ., sep = \"\") %>% \n  parse_date_time(., \"dmy\")\n\n# New columns for months and years\nstartup$year <- year(startup$Announcement_Date)\nstartup$month <- month(startup$Announcement_Date)\nstr(startup)"
  },
  {
    "objectID": "assignment1.html#determining-top-5-sectors-in-terms-of-total-value-of-investments",
    "href": "assignment1.html#determining-top-5-sectors-in-terms-of-total-value-of-investments",
    "title": "1  Assignment 1",
    "section": "3.2 Determining top 5 sectors in terms of total value of investments",
    "text": "3.2 Determining top 5 sectors in terms of total value of investments\nTable below shows the top 5 sectors of startups that are invested most in total value in 2021.\n\ntop_5_sector_table <- startup %>% \n  group_by(Sector) %>% \n  summarize(total_value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  arrange(desc(total_value)) %>% \n  top_n(n = 5)\n\nSelecting by total_value\n\nkable(top_5_sector_table)\n\n\n\n\nSector\ntotal_value\n\n\n\n\nEcommerce enabler\n2218940063\n\n\nDelivery & Logistics\n1027811561\n\n\nGaming\n221235284\n\n\nSaaS\n84053230\n\n\nFintech\n28894578"
  },
  {
    "objectID": "assignment1.html#visualising-monthly-sectoral-investments-to-startups-in-2021",
    "href": "assignment1.html#visualising-monthly-sectoral-investments-to-startups-in-2021",
    "title": "1  Assignment 1",
    "section": "3.3 Visualising monthly sectoral investments to startups in 2021",
    "text": "3.3 Visualising monthly sectoral investments to startups in 2021\nSectors are grouped as top 5 sectors and the remaining sectors are labeled as “Others”. As can be seen from the bar plot of monthly distribution of value of total investments, highest value of deals are sealed and announced during summer in 2021.\n\n# Obtaining top 5 sectors found in previous code as a vector.\ntop_5_sector <- top_5_sector_table %>% \n  select(Sector) %>% \n  pull()\n\n# Create a new variable that classify sectors other than top_5 as others\nstartup <- startup %>% \n  mutate(group_sector = case_when(Sector %in% top_5_sector ~ Sector,!(Sector %in% top_5_sector) ~ \"Other\"))\n\n# Plotting monthly investment values of top_5_sectors and others\nstartup %>% \n  group_by(Announcement_Date, group_sector) %>% \n  summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +\n  geom_col() +\n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Deal Announcement Date\", y = \"Total Deal Value (USD)\") + \n  scale_fill_viridis(discrete=TRUE) +\n  theme_bw()\n\n`summarise()` has grouped output by 'Announcement_Date'. You can override using\nthe `.groups` argument."
  },
  {
    "objectID": "assignment1.html#distribution-of-investments-across-target-companies.",
    "href": "assignment1.html#distribution-of-investments-across-target-companies.",
    "title": "1  Assignment 1",
    "section": "3.4 Distribution of investments across target companies.",
    "text": "3.4 Distribution of investments across target companies.\nThe deals accomplished in 2021 is concentrated on a few startups. 4 highest valued deals sum up to almost 90% of total value of all deals in 2021.\n\n# Obtain percentages of Target_companies in terms of value invested in 2021\n# Classify companies as first 4 companies and others\n\nstartup_percent <- startup %>% \n  group_by(Target_Company) %>% \n  summarize(Total_Deal_Value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  mutate(percent = Total_Deal_Value / sum(Total_Deal_Value) * 100) %>% \n  arrange(desc(percent)) %>% \n  mutate(group_company = case_when(Target_Company %in% Target_Company[1:4] ~ Target_Company, !(Target_Company %in% Target_Company[1:4])~\"others\"))\n\nstartup_percent[1:4,] %>% \n  summarize(Total_Value = sum(Total_Deal_Value), percentage = sum(percent))\n\n# A tibble: 1 × 2\n  Total_Value percentage\n        <dbl>      <dbl>\n1  3369481050       89.2\n\n# Draw a column chart according to group framework given above\n\nstartup_percent_group <- startup_percent %>% \n  group_by(group_company) %>% \n  summarize(group_percent = sum(percent, na.rm = TRUE)) %>% \n  arrange(desc(group_percent)) %>% \n  mutate(cum_percentage = cumsum(group_percent)) \n\nkable(startup_percent_group)\n\n\n\n\ngroup_company\ngroup_percent\ncum_percentage\n\n\n\n\ntrendyol\n37.975496\n37.97550\n\n\nGetir\n26.940108\n64.91560\n\n\nhepsiburada\n20.151651\n85.06726\n\n\nothers\n10.830861\n95.89812\n\n\nDream Games\n4.101884\n100.00000\n\n\n\n\nstartup_percent_group %>% \n  arrange(group_percent) %>% \n  mutate(group_company = factor(group_company, group_company)) %>% \n  ggplot(aes(x = group_company, y = group_percent)) +\n  geom_col(fill = \"#69b3a2\") + \n  labs(x = \"Target Company\", y = \"Percentage (%)\", title = \"Distribution of Startup Investments among Target Companies in 2021\") +\n  theme_bw()"
  },
  {
    "objectID": "assignment1.html#categorizing-investors-as-locals-and-foreigners",
    "href": "assignment1.html#categorizing-investors-as-locals-and-foreigners",
    "title": "1  Assignment 1",
    "section": "3.5 Categorizing Investors as Locals and Foreigners",
    "text": "3.5 Categorizing Investors as Locals and Foreigners\nEqual partnership in investments is assumed if number of investors is higher than one in a particular deal.\n\n# Generate Unique id for each transaction and calculate number of investors as a new column \"count\"\nid_count <- startup %>% \n  mutate(id = 1:dim(startup)[1]) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  group_by(id) %>% \n  summarize(id_count = n()) %>% \n  pull(id_count)\n\n# Add id_count to startup\nstartup_country <- startup %>% \n  mutate(id_count) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  mutate(new_value = `Deal_Value_(USD)` / id_count) %>% \n  mutate(country_name = gsub(pattern = \"\\r\\n\", replacement = \"\", x = .$`Investor's_Origin`)) %>% \n  filter(country_name != \"NA\")\n\n# Categorizing investors as foreign and local\n# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.\nlocal_foreign <- startup_country %>% \n  group_by(Announcement_Date) %>% \n  summarize(local = sum(new_value[country_name == \"Turkey\"], na.rm = TRUE), foreign = sum(new_value[country_name != \"Turkey\"], na.rm = TRUE))\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  group_by(type) %>% \n  summarize(Sum = sum(deal_value)) %>% \n  print()\n\n# A tibble: 2 × 2\n  type            Sum\n  <chr>         <dbl>\n1 foreign 3470365902.\n2 local    273386559.\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  ggplot(aes(x = type, y = deal_value)) + \n  geom_col(stat=\"identity\", fill=\"#69b3a2\") +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Investor Type\", y = \"Total Value of Deals\", title = \"Domestic vs. Foreign Investment\") +\n  theme_bw()"
  },
  {
    "objectID": "assignment1.html#analysing-country-profile-of-investors",
    "href": "assignment1.html#analysing-country-profile-of-investors",
    "title": "1  Assignment 1",
    "section": "3.6 Analysing Country Profile of Investors",
    "text": "3.6 Analysing Country Profile of Investors\nAlthough number of deals accomplished by local investors is higher than foreigners, total value of transactions completed by foreign investors is 12 times higher than locals.\n\nstartup_country_graph <- startup_country %>%   \n  group_by(country_name) %>% \n  summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%\n  arrange(desc(country_total)) %>% \n  print()\n\n# A tibble: 22 × 3\n   country_name country_total country_number\n   <chr>                <dbl>          <int>\n 1 USA            1851560871              25\n 2 UAE             642850000               4\n 3 Qatar           359695000               4\n 4 Japan           358750000               1\n 5 Turkey          273386559.            254\n 6 UK              137790314.             13\n 7 Brazil           42666667.              1\n 8 France           32000000               2\n 9 Finland          10000000               1\n10 Germany           7635684.              4\n# … with 12 more rows\n\nstartup_country_graph$country_name[startup_country_graph$country_name == \"UAE\"] = \"United Arab Emirates\"\n\n# Graph investment deals and number of transactions of highest 10 countries in 2021\nstartup_country_graph %>% \n  arrange(country_total) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_total) %>% \n  ggplot(aes(x = Country, y = country_total)) +\n  geom_col(stat = \"identity\", fill=\"#69b3a2\") + \n  coord_flip() +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(y = \"Total Value of Deals\", title = \"Value of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\nstartup_country_graph %>% \n  arrange(country_number) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_number) %>% \n  ggplot(aes(x = Country, y = country_number)) +\n  geom_col(stat=\"identity\", fill=\"#69b3a2\") + \n  coord_flip() +\n  labs(y = \"Number of Deals\", title = \"Number of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\n## Alternative way to demonstrate geographic variation of investments into startups\n\nworld_map <- map_data(\"world\")\nworld_map <- subset(world_map, region != \"Antarctica\")\n\n# World heat map plot\nggplot(startup_country_graph) +\n  geom_map(\n    dat = world_map, map = world_map, aes(map_id = region),\n    fill = \"white\", color = \"#7f7f7f\", size = 0.25\n  ) +\n  geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +\n  scale_fill_gradient(low = \"#56B1F7\", high = \"#132B43\", name = \"Investments\\n(Million USD)\") +\n  expand_limits(x = world_map$long, y = world_map$lat) + labs(title = \"Geographic Distribution of Startup Investments in 2021\") +\n  theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())"
  },
  {
    "objectID": "assignment1.html#data-wrangling-and-exploratory-data-analysis",
    "href": "assignment1.html#data-wrangling-and-exploratory-data-analysis",
    "title": "1  Assignment 1",
    "section": "1.2 Data Wrangling and Exploratory Data Analysis",
    "text": "1.2 Data Wrangling and Exploratory Data Analysis\nDownload necessary libraries\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(knitr)\nlibrary(viridis)\nlibrary(maps)\n\n\n1.2.1 Data Preparation\nNecessary data manipulation operations are made to prepare raw data for further analysis.\n\n#read data\nstartup <- read_excel(\"startup_deals_2021.xlsx\")\n\n# Convert spaces to underscore in column names\ncolnames(startup) <- startup %>% \n  colnames() %>% \n  gsub(\" \", \"_\", .)\n\n# Convert data type of numeric columns from string to numeric\nstartup$`Deal_Value_(USD)` <- as.numeric(startup$`Deal_Value_(USD)`)\n\n# Convert percentages to numeric format\nstartup$`Stake_(%)` <- startup$`Stake_(%)` %>% \n  gsub(\"\\\\..*\", \"\", .) %>% \n  gsub(\"%\", \"\", .) %>% \n  as.numeric()\n\n# Convert string date to date format\nstartup$Announcement_Date <- startup$Announcement_Date %>% \n  paste(\"01\", ., sep = \"\") %>% \n  parse_date_time(., \"dmy\")\n\n# New columns for months and years\nstartup$year <- year(startup$Announcement_Date)\nstartup$month <- month(startup$Announcement_Date)\nstr(startup)\n\n\n\n1.2.2 Determining Top 5 Sectors in terms of Total Value of Investments\nTable below shows the top 5 sectors of startups that are invested most in total value in 2021.\n\ntop_5_sector_table <- startup %>% \n  group_by(Sector) %>% \n  summarize(total_value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  arrange(desc(total_value)) %>% \n  top_n(n = 5)\n\nSelecting by total_value\n\nkable(top_5_sector_table)\n\n\n\n\nSector\ntotal_value\n\n\n\n\nEcommerce enabler\n2218940063\n\n\nDelivery & Logistics\n1027811561\n\n\nGaming\n221235284\n\n\nSaaS\n84053230\n\n\nFintech\n28894578\n\n\n\n\n\n\n\n1.2.3 Visualising Monthly Sectoral Investments to Startups in 2021\nSectors are grouped as top 5 sectors and the remaining sectors are labeled as “Others”. As can be seen from the bar plot of monthly distribution of value of total investments, highest value of deals are sealed and announced during summer in 2021.\n\n# Obtaining top 5 sectors found in previous code as a vector.\ntop_5_sector <- top_5_sector_table %>% \n  select(Sector) %>% \n  pull()\n\n# Create a new variable that classify sectors other than top_5 as others\nstartup <- startup %>% \n  mutate(group_sector = case_when(Sector %in% top_5_sector ~ Sector,!(Sector %in% top_5_sector) ~ \"Other\"))\n\n# Plotting monthly investment values of top_5_sectors and others\nstartup %>% \n  group_by(Announcement_Date, group_sector) %>% \n  summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +\n  geom_col() +\n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Deal Announcement Date\", y = \"Total Deal Value (USD)\") + \n  scale_fill_viridis(discrete=TRUE) +\n  theme_bw()\n\n`summarise()` has grouped output by 'Announcement_Date'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n1.2.4 Distribution of Investments Across Target Companies.\nThe deals accomplished in 2021 is concentrated on a few startups. 4 highest valued deals sum up to almost 90% of total value of all deals in 2021.\n\n# Obtain percentages of Target_companies in terms of value invested in 2021\n# Classify companies as first 4 companies and others\n\nstartup_percent <- startup %>% \n  group_by(Target_Company) %>% \n  summarize(Total_Deal_Value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  mutate(percent = Total_Deal_Value / sum(Total_Deal_Value) * 100) %>% \n  arrange(desc(percent)) %>% \n  mutate(group_company = case_when(Target_Company %in% Target_Company[1:4] ~ Target_Company, !(Target_Company %in% Target_Company[1:4])~\"others\"))\n\nstartup_percent[1:4,] %>% \n  summarize(Total_Value = sum(Total_Deal_Value), percentage = sum(percent))\n\n# A tibble: 1 × 2\n  Total_Value percentage\n        <dbl>      <dbl>\n1  3369481050       89.2\n\n# Draw a column chart according to group framework given above\n\nstartup_percent_group <- startup_percent %>% \n  group_by(group_company) %>% \n  summarize(group_percent = sum(percent, na.rm = TRUE)) %>% \n  arrange(desc(group_percent)) %>% \n  mutate(cum_percentage = cumsum(group_percent)) \n\nkable(startup_percent_group)\n\n\n\n\ngroup_company\ngroup_percent\ncum_percentage\n\n\n\n\ntrendyol\n37.975496\n37.97550\n\n\nGetir\n26.940108\n64.91560\n\n\nhepsiburada\n20.151651\n85.06726\n\n\nothers\n10.830861\n95.89812\n\n\nDream Games\n4.101884\n100.00000\n\n\n\n\nstartup_percent_group %>% \n  arrange(group_percent) %>% \n  mutate(group_company = factor(group_company, group_company)) %>% \n  ggplot(aes(x = group_company, y = group_percent)) +\n  geom_col(fill = \"#69b3a2\") + \n  labs(x = \"Target Company\", y = \"Percentage (%)\", title = \"Distribution of Startup Investments among Target Companies in 2021\") +\n  theme_bw()\n\n\n\n\n\n\n1.2.5 Categorizing Investors as Locals and Foreigners\nEqual partnership in investments is assumed if number of investors is higher than one in a particular deal.\n\n# Generate Unique id for each transaction and calculate number of investors as a new column \"count\"\nid_count <- startup %>% \n  mutate(id = 1:dim(startup)[1]) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  group_by(id) %>% \n  summarize(id_count = n()) %>% \n  pull(id_count)\n\n# Add id_count to startup\nstartup_country <- startup %>% \n  mutate(id_count) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  mutate(new_value = `Deal_Value_(USD)` / id_count) %>% \n  mutate(country_name = gsub(pattern = \"\\r\\n\", replacement = \"\", x = .$`Investor's_Origin`)) %>% \n  filter(country_name != \"NA\")\n\n# Categorizing investors as foreign and local\n# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.\nlocal_foreign <- startup_country %>% \n  group_by(Announcement_Date) %>% \n  summarize(local = sum(new_value[country_name == \"Turkey\"], na.rm = TRUE), foreign = sum(new_value[country_name != \"Turkey\"], na.rm = TRUE))\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  group_by(type) %>% \n  summarize(Sum = sum(deal_value)) %>% \n  print()\n\n# A tibble: 2 × 2\n  type            Sum\n  <chr>         <dbl>\n1 foreign 3470365902.\n2 local    273386559.\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  ggplot(aes(x = type, y = deal_value)) + \n  geom_col(stat=\"identity\", fill=\"#69b3a2\") +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Investor Type\", y = \"Total Value of Deals\", title = \"Domestic vs. Foreign Investment\") +\n  theme_bw()\n\n\n\n\n\n\n1.2.6 Analysing Country Profile of Investors\nAlthough number of deals accomplished by local investors is higher than foreigners, total value of transactions completed by foreign investors is 12 times higher than locals.\n\nstartup_country_graph <- startup_country %>%   \n  group_by(country_name) %>% \n  summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%\n  arrange(desc(country_total)) %>% \n  print()\n\n# A tibble: 22 × 3\n   country_name country_total country_number\n   <chr>                <dbl>          <int>\n 1 USA            1851560871              25\n 2 UAE             642850000               4\n 3 Qatar           359695000               4\n 4 Japan           358750000               1\n 5 Turkey          273386559.            254\n 6 UK              137790314.             13\n 7 Brazil           42666667.              1\n 8 France           32000000               2\n 9 Finland          10000000               1\n10 Germany           7635684.              4\n# … with 12 more rows\n\nstartup_country_graph$country_name[startup_country_graph$country_name == \"UAE\"] = \"United Arab Emirates\"\n\n# Graph investment deals and number of transactions of highest 10 countries in 2021\nstartup_country_graph %>% \n  arrange(country_total) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_total) %>% \n  ggplot(aes(x = Country, y = country_total)) +\n  geom_col(stat = \"identity\", fill=\"#69b3a2\") + \n  coord_flip() +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(y = \"Total Value of Deals\", title = \"Value of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\nstartup_country_graph %>% \n  arrange(country_number) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_number) %>% \n  ggplot(aes(x = Country, y = country_number)) +\n  geom_col(stat=\"identity\", fill=\"#69b3a2\") + \n  coord_flip() +\n  labs(y = \"Number of Deals\", title = \"Number of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\n## Alternative way to demonstrate geographic variation of investments into startups\n\nworld_map <- map_data(\"world\")\nworld_map <- subset(world_map, region != \"Antarctica\")\n\n# World heat map plot\nggplot(startup_country_graph) +\n  geom_map(\n    dat = world_map, map = world_map, aes(map_id = region),\n    fill = \"white\", color = \"#7f7f7f\", size = 0.25\n  ) +\n  geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +\n  scale_fill_gradient(low = \"#56B1F7\", high = \"#132B43\", name = \"Investments\\n(Million USD)\") +\n  expand_limits(x = world_map$long, y = world_map$lat) + labs(title = \"Geographic Distribution of Startup Investments in 2021\") +\n  theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())"
  },
  {
    "objectID": "index.html#group-members-in-alphabetical-order-is-given-below",
    "href": "index.html#group-members-in-alphabetical-order-is-given-below",
    "title": "Time and Space Progress Journal",
    "section": "Group Members in alphabetical order is given below:",
    "text": "Group Members in alphabetical order is given below:\n\nGülhan Demirel Dilek\nOrhun Doğan\nYener Alboğa\nYiğit Onay\nZeynep Yağmur Güner"
  },
  {
    "objectID": "index.html#group-project-details",
    "href": "index.html#group-project-details",
    "title": "Time and Space Progress Journal",
    "section": "Group Project Details",
    "text": "Group Project Details\nOur group project is about exploration of financial status of real sector companies and their connection with macro indicators.\nShortly, our study aims to present a description of financial status of real sector companies based on their financial tables and their status of employment (labor cost, gender distribution), international trade (competitive advantage, export/import potential), growth dynamics and cost structures (producer prices)."
  },
  {
    "objectID": "data_prep.html#main-data-for-our-project",
    "href": "data_prep.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\nsector_info %>% head()\n\n# A tibble: 6 × 3\n  sector_code sector_name     group       \n  <chr>       <chr>           <chr>       \n1 A           Agriculture     Agriculture \n2 B           Mining          Industry    \n3 C           Manufacturing   Industry    \n4 D           Electricity_Gas Industry    \n5 E           Water_Supply    Industry    \n6 F           Construction    Construction\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "data_prep.html#other-relational-datasets",
    "href": "data_prep.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  },
  {
    "objectID": "Data_Preparation_Turkstat.html#main-data-for-our-project",
    "href": "Data_Preparation_Turkstat.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\nsector_info %>% head()\n\n# A tibble: 6 × 3\n  sector_code sector_name     group       \n  <chr>       <chr>           <chr>       \n1 A           Agriculture     Agriculture \n2 B           Mining          Industry    \n3 C           Manufacturing   Industry    \n4 D           Electricity_Gas Industry    \n5 E           Water_Supply    Industry    \n6 F           Construction    Construction\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "Data_Preparation_Turkstat.html#other-relational-datasets",
    "href": "Data_Preparation_Turkstat.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  }
]