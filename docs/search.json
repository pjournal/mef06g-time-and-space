[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time and Space Progress Journal",
    "section": "",
    "text": "Introduction\nThis progress journal covers Time and Space’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "2 Key Takeaways"
  },
  {
    "objectID": "assignment1.html#key-takeaways",
    "href": "assignment1.html#key-takeaways",
    "title": "1  Assignment 1",
    "section": "1.1 Key Takeaways",
    "text": "1.1 Key Takeaways\n\nTop 5 sectors that are invested most in terms of total value are Ecommerce enabler, Delivery and Logistics, Gaming, SaaS and Fintech respectively.\nMost of the investment deals are sealed during period from June 2021 to August 2021\nRegarding the distribution of investments made to the target companies, first 4 startups, namely Trendyol, Getir, Hepsiburada and Dream Games, attracted a total of 3.4 billion USD approximately and accounted for 89.2% of all investments made in 2021.\nThe share of local investors, with a total investment value of 273 million USD, is limited and majority of the investments are made by foreign investors with a total value of 3.5 billion USD.\nMost of the investors by far the most are from Turkey in terms of number of deals, where as United States, UAE and Qatar are leading countries of investors in terms of value invested in startups."
  },
  {
    "objectID": "assignment1.html#data-preparation",
    "href": "assignment1.html#data-preparation",
    "title": "1  Assignment 1",
    "section": "3.1 Data Preparation",
    "text": "3.1 Data Preparation\nNecessary data manipulation operations are made to prepare raw data for further analysis.\n\n#read data\nstartup <- read_excel(\"startup_deals_2021.xlsx\")\n\n# Convert spaces to underscore in column names\ncolnames(startup) <- startup %>% \n  colnames() %>% \n  gsub(\" \", \"_\", .)\n\n# Convert data type of numeric columns from string to numeric\nstartup$`Deal_Value_(USD)` <- as.numeric(startup$`Deal_Value_(USD)`)\n\n# Convert percentages to numeric format\nstartup$`Stake_(%)` <- startup$`Stake_(%)` %>% \n  gsub(\"\\\\..*\", \"\", .) %>% \n  gsub(\"%\", \"\", .) %>% \n  as.numeric()\n\n# Convert string date to date format\nstartup$Announcement_Date <- startup$Announcement_Date %>% \n  paste(\"01\", ., sep = \"\") %>% \n  parse_date_time(., \"dmy\")\n\n# New columns for months and years\nstartup$year <- year(startup$Announcement_Date)\nstartup$month <- month(startup$Announcement_Date)\nstr(startup)"
  },
  {
    "objectID": "assignment1.html#determining-top-5-sectors-in-terms-of-total-value-of-investments",
    "href": "assignment1.html#determining-top-5-sectors-in-terms-of-total-value-of-investments",
    "title": "1  Assignment 1",
    "section": "3.2 Determining top 5 sectors in terms of total value of investments",
    "text": "3.2 Determining top 5 sectors in terms of total value of investments\nTable below shows the top 5 sectors of startups that are invested most in total value in 2021.\n\ntop_5_sector_table <- startup %>% \n  group_by(Sector) %>% \n  summarize(total_value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  arrange(desc(total_value)) %>% \n  top_n(n = 5)\n\nSelecting by total_value\n\nkable(top_5_sector_table)\n\n\n\n\nSector\ntotal_value\n\n\n\n\nEcommerce enabler\n2218940063\n\n\nDelivery & Logistics\n1027811561\n\n\nGaming\n221235284\n\n\nSaaS\n84053230\n\n\nFintech\n28894578"
  },
  {
    "objectID": "assignment1.html#visualising-monthly-sectoral-investments-to-startups-in-2021",
    "href": "assignment1.html#visualising-monthly-sectoral-investments-to-startups-in-2021",
    "title": "1  Assignment 1",
    "section": "3.3 Visualising monthly sectoral investments to startups in 2021",
    "text": "3.3 Visualising monthly sectoral investments to startups in 2021\nSectors are grouped as top 5 sectors and the remaining sectors are labeled as “Others”. As can be seen from the bar plot of monthly distribution of value of total investments, highest value of deals are sealed and announced during summer in 2021.\n\n# Obtaining top 5 sectors found in previous code as a vector.\ntop_5_sector <- top_5_sector_table %>% \n  select(Sector) %>% \n  pull()\n\n# Create a new variable that classify sectors other than top_5 as others\nstartup <- startup %>% \n  mutate(group_sector = case_when(Sector %in% top_5_sector ~ Sector,!(Sector %in% top_5_sector) ~ \"Other\"))\n\n# Plotting monthly investment values of top_5_sectors and others\nstartup %>% \n  group_by(Announcement_Date, group_sector) %>% \n  summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +\n  geom_col() +\n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Deal Announcement Date\", y = \"Total Deal Value (USD)\") + \n  scale_fill_viridis(discrete=TRUE) +\n  theme_bw()\n\n`summarise()` has grouped output by 'Announcement_Date'. You can override using\nthe `.groups` argument."
  },
  {
    "objectID": "assignment1.html#distribution-of-investments-across-target-companies.",
    "href": "assignment1.html#distribution-of-investments-across-target-companies.",
    "title": "1  Assignment 1",
    "section": "3.4 Distribution of investments across target companies.",
    "text": "3.4 Distribution of investments across target companies.\nThe deals accomplished in 2021 is concentrated on a few startups. 4 highest valued deals sum up to almost 90% of total value of all deals in 2021.\n\n# Obtain percentages of Target_companies in terms of value invested in 2021\n# Classify companies as first 4 companies and others\n\nstartup_percent <- startup %>% \n  group_by(Target_Company) %>% \n  summarize(Total_Deal_Value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  mutate(percent = Total_Deal_Value / sum(Total_Deal_Value) * 100) %>% \n  arrange(desc(percent)) %>% \n  mutate(group_company = case_when(Target_Company %in% Target_Company[1:4] ~ Target_Company, !(Target_Company %in% Target_Company[1:4])~\"others\"))\n\nstartup_percent[1:4,] %>% \n  summarize(Total_Value = sum(Total_Deal_Value), percentage = sum(percent))\n\n# A tibble: 1 × 2\n  Total_Value percentage\n        <dbl>      <dbl>\n1  3369481050       89.2\n\n# Draw a column chart according to group framework given above\n\nstartup_percent_group <- startup_percent %>% \n  group_by(group_company) %>% \n  summarize(group_percent = sum(percent, na.rm = TRUE)) %>% \n  arrange(desc(group_percent)) %>% \n  mutate(cum_percentage = cumsum(group_percent)) \n\nkable(startup_percent_group)\n\n\n\n\ngroup_company\ngroup_percent\ncum_percentage\n\n\n\n\ntrendyol\n37.975496\n37.97550\n\n\nGetir\n26.940108\n64.91560\n\n\nhepsiburada\n20.151651\n85.06726\n\n\nothers\n10.830861\n95.89812\n\n\nDream Games\n4.101884\n100.00000\n\n\n\n\nstartup_percent_group %>% \n  arrange(group_percent) %>% \n  mutate(group_company = factor(group_company, group_company)) %>% \n  ggplot(aes(x = group_company, y = group_percent)) +\n  geom_col(fill = \"#69b3a2\") + \n  labs(x = \"Target Company\", y = \"Percentage (%)\", title = \"Distribution of Startup Investments among Target Companies in 2021\") +\n  theme_bw()"
  },
  {
    "objectID": "assignment1.html#categorizing-investors-as-locals-and-foreigners",
    "href": "assignment1.html#categorizing-investors-as-locals-and-foreigners",
    "title": "1  Assignment 1",
    "section": "3.5 Categorizing Investors as Locals and Foreigners",
    "text": "3.5 Categorizing Investors as Locals and Foreigners\nEqual partnership in investments is assumed if number of investors is higher than one in a particular deal.\n\n# Generate Unique id for each transaction and calculate number of investors as a new column \"count\"\nid_count <- startup %>% \n  mutate(id = 1:dim(startup)[1]) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  group_by(id) %>% \n  summarize(id_count = n()) %>% \n  pull(id_count)\n\n# Add id_count to startup\nstartup_country <- startup %>% \n  mutate(id_count) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  mutate(new_value = `Deal_Value_(USD)` / id_count) %>% \n  mutate(country_name = gsub(pattern = \"\\r\\n\", replacement = \"\", x = .$`Investor's_Origin`)) %>% \n  filter(country_name != \"NA\")\n\n# Categorizing investors as foreign and local\n# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.\nlocal_foreign <- startup_country %>% \n  group_by(Announcement_Date) %>% \n  summarize(local = sum(new_value[country_name == \"Turkey\"], na.rm = TRUE), foreign = sum(new_value[country_name != \"Turkey\"], na.rm = TRUE))\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  group_by(type) %>% \n  summarize(Sum = sum(deal_value)) %>% \n  print()\n\n# A tibble: 2 × 2\n  type            Sum\n  <chr>         <dbl>\n1 foreign 3470365902.\n2 local    273386559.\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  ggplot(aes(x = type, y = deal_value)) + \n  geom_col(stat=\"identity\", fill=\"#69b3a2\") +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Investor Type\", y = \"Total Value of Deals\", title = \"Domestic vs. Foreign Investment\") +\n  theme_bw()"
  },
  {
    "objectID": "assignment1.html#analysing-country-profile-of-investors",
    "href": "assignment1.html#analysing-country-profile-of-investors",
    "title": "1  Assignment 1",
    "section": "3.6 Analysing Country Profile of Investors",
    "text": "3.6 Analysing Country Profile of Investors\nAlthough number of deals accomplished by local investors is higher than foreigners, total value of transactions completed by foreign investors is 12 times higher than locals.\n\nstartup_country_graph <- startup_country %>%   \n  group_by(country_name) %>% \n  summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%\n  arrange(desc(country_total)) %>% \n  print()\n\n# A tibble: 22 × 3\n   country_name country_total country_number\n   <chr>                <dbl>          <int>\n 1 USA            1851560871              25\n 2 UAE             642850000               4\n 3 Qatar           359695000               4\n 4 Japan           358750000               1\n 5 Turkey          273386559.            254\n 6 UK              137790314.             13\n 7 Brazil           42666667.              1\n 8 France           32000000               2\n 9 Finland          10000000               1\n10 Germany           7635684.              4\n# … with 12 more rows\n\nstartup_country_graph$country_name[startup_country_graph$country_name == \"UAE\"] = \"United Arab Emirates\"\n\n# Graph investment deals and number of transactions of highest 10 countries in 2021\nstartup_country_graph %>% \n  arrange(country_total) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_total) %>% \n  ggplot(aes(x = Country, y = country_total)) +\n  geom_col(stat = \"identity\", fill=\"#69b3a2\") + \n  coord_flip() +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(y = \"Total Value of Deals\", title = \"Value of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\nstartup_country_graph %>% \n  arrange(country_number) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_number) %>% \n  ggplot(aes(x = Country, y = country_number)) +\n  geom_col(stat=\"identity\", fill=\"#69b3a2\") + \n  coord_flip() +\n  labs(y = \"Number of Deals\", title = \"Number of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\n## Alternative way to demonstrate geographic variation of investments into startups\n\nworld_map <- map_data(\"world\")\nworld_map <- subset(world_map, region != \"Antarctica\")\n\n# World heat map plot\nggplot(startup_country_graph) +\n  geom_map(\n    dat = world_map, map = world_map, aes(map_id = region),\n    fill = \"white\", color = \"#7f7f7f\", size = 0.25\n  ) +\n  geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +\n  scale_fill_gradient(low = \"#56B1F7\", high = \"#132B43\", name = \"Investments\\n(Million USD)\") +\n  expand_limits(x = world_map$long, y = world_map$lat) + labs(title = \"Geographic Distribution of Startup Investments in 2021\") +\n  theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())"
  },
  {
    "objectID": "assignment1.html#data-wrangling-and-exploratory-data-analysis",
    "href": "assignment1.html#data-wrangling-and-exploratory-data-analysis",
    "title": "1  Assignment 1",
    "section": "1.2 Data Wrangling and Exploratory Data Analysis",
    "text": "1.2 Data Wrangling and Exploratory Data Analysis\nDownload necessary libraries\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(scales)\nlibrary(knitr)\nlibrary(viridis)\nlibrary(maps)\n\n\n1.2.1 Data Preparation\nNecessary data manipulation operations are made to prepare raw data for further analysis.\n\n#read data\nstartup <- read_excel(\"startup_deals_2021.xlsx\")\n\n# Convert spaces to underscore in column names\ncolnames(startup) <- startup %>% \n  colnames() %>% \n  gsub(\" \", \"_\", .)\n\n# Convert data type of numeric columns from string to numeric\nstartup$`Deal_Value_(USD)` <- as.numeric(startup$`Deal_Value_(USD)`)\n\n# Convert percentages to numeric format\nstartup$`Stake_(%)` <- startup$`Stake_(%)` %>% \n  gsub(\"\\\\..*\", \"\", .) %>% \n  gsub(\"%\", \"\", .) %>% \n  as.numeric()\n\n# Convert string date to date format\nstartup$Announcement_Date <- startup$Announcement_Date %>% \n  paste(\"01\", ., sep = \"\") %>% \n  parse_date_time(., \"dmy\")\n\n# New columns for months and years\nstartup$year <- year(startup$Announcement_Date)\nstartup$month <- month(startup$Announcement_Date)\nstr(startup)\n\n\n\n1.2.2 Determining Top 5 Sectors in terms of Total Value of Investments\nTable below shows the top 5 sectors of startups that are invested most in total value in 2021.\n\ntop_5_sector_table <- startup %>% \n  group_by(Sector) %>% \n  summarize(total_value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  arrange(desc(total_value)) %>% \n  top_n(n = 5)\n\nSelecting by total_value\n\nkable(top_5_sector_table)\n\n\n\n\nSector\ntotal_value\n\n\n\n\nEcommerce enabler\n2218940063\n\n\nDelivery & Logistics\n1027811561\n\n\nGaming\n221235284\n\n\nSaaS\n84053230\n\n\nFintech\n28894578\n\n\n\n\n\n\n\n1.2.3 Visualising Monthly Sectoral Investments to Startups in 2021\nSectors are grouped as top 5 sectors and the remaining sectors are labeled as “Others”. As can be seen from the bar plot of monthly distribution of value of total investments, highest value of deals are sealed and announced during summer in 2021.\n\n# Obtaining top 5 sectors found in previous code as a vector.\ntop_5_sector <- top_5_sector_table %>% \n  select(Sector) %>% \n  pull()\n\n# Create a new variable that classify sectors other than top_5 as others\nstartup <- startup %>% \n  mutate(group_sector = case_when(Sector %in% top_5_sector ~ Sector,!(Sector %in% top_5_sector) ~ \"Other\"))\n\n# Plotting monthly investment values of top_5_sectors and others\nstartup %>% \n  group_by(Announcement_Date, group_sector) %>% \n  summarise(value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  ggplot(aes(x = Announcement_Date, y = value, fill = group_sector)) +\n  geom_col() +\n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Deal Announcement Date\", y = \"Total Deal Value (USD)\") + \n  scale_fill_viridis(discrete=TRUE) +\n  theme_bw()\n\n`summarise()` has grouped output by 'Announcement_Date'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n1.2.4 Distribution of Investments Across Target Companies.\nThe deals accomplished in 2021 is concentrated on a few startups. 4 highest valued deals sum up to almost 90% of total value of all deals in 2021.\n\n# Obtain percentages of Target_companies in terms of value invested in 2021\n# Classify companies as first 4 companies and others\n\nstartup_percent <- startup %>% \n  group_by(Target_Company) %>% \n  summarize(Total_Deal_Value = sum(`Deal_Value_(USD)`, na.rm = TRUE)) %>% \n  mutate(percent = Total_Deal_Value / sum(Total_Deal_Value) * 100) %>% \n  arrange(desc(percent)) %>% \n  mutate(group_company = case_when(Target_Company %in% Target_Company[1:4] ~ Target_Company, !(Target_Company %in% Target_Company[1:4])~\"others\"))\n\nstartup_percent[1:4,] %>% \n  summarize(Total_Value = sum(Total_Deal_Value), percentage = sum(percent))\n\n# A tibble: 1 × 2\n  Total_Value percentage\n        <dbl>      <dbl>\n1  3369481050       89.2\n\n# Draw a column chart according to group framework given above\n\nstartup_percent_group <- startup_percent %>% \n  group_by(group_company) %>% \n  summarize(group_percent = sum(percent, na.rm = TRUE)) %>% \n  arrange(desc(group_percent)) %>% \n  mutate(cum_percentage = cumsum(group_percent)) \n\nkable(startup_percent_group)\n\n\n\n\ngroup_company\ngroup_percent\ncum_percentage\n\n\n\n\ntrendyol\n37.975496\n37.97550\n\n\nGetir\n26.940108\n64.91560\n\n\nhepsiburada\n20.151651\n85.06726\n\n\nothers\n10.830861\n95.89812\n\n\nDream Games\n4.101884\n100.00000\n\n\n\n\nstartup_percent_group %>% \n  arrange(group_percent) %>% \n  mutate(group_company = factor(group_company, group_company)) %>% \n  ggplot(aes(x = group_company, y = group_percent)) +\n  geom_col(fill = \"#69b3a2\") + \n  labs(x = \"Target Company\", y = \"Percentage (%)\", title = \"Distribution of Startup Investments among Target Companies in 2021\") +\n  theme_bw()\n\n\n\n\n\n\n1.2.5 Categorizing Investors as Locals and Foreigners\nEqual partnership in investments is assumed if number of investors is higher than one in a particular deal.\n\n# Generate Unique id for each transaction and calculate number of investors as a new column \"count\"\nid_count <- startup %>% \n  mutate(id = 1:dim(startup)[1]) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  group_by(id) %>% \n  summarize(id_count = n()) %>% \n  pull(id_count)\n\n# Add id_count to startup\nstartup_country <- startup %>% \n  mutate(id_count) %>% \n  separate_rows(`Investor's_Origin`, sep = \", \") %>% \n  mutate(new_value = `Deal_Value_(USD)` / id_count) %>% \n  mutate(country_name = gsub(pattern = \"\\r\\n\", replacement = \"\", x = .$`Investor's_Origin`)) %>% \n  filter(country_name != \"NA\")\n\n# Categorizing investors as foreign and local\n# Type of investors (local/foreign) as two subgroups is obtained and used for monthly investment deals.\nlocal_foreign <- startup_country %>% \n  group_by(Announcement_Date) %>% \n  summarize(local = sum(new_value[country_name == \"Turkey\"], na.rm = TRUE), foreign = sum(new_value[country_name != \"Turkey\"], na.rm = TRUE))\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  group_by(type) %>% \n  summarize(Sum = sum(deal_value)) %>% \n  print()\n\n# A tibble: 2 × 2\n  type            Sum\n  <chr>         <dbl>\n1 foreign 3470365902.\n2 local    273386559.\n\nlocal_foreign %>% \n  pivot_longer(cols = c(local, foreign),names_to = \"type\", values_to = \"deal_value\") %>% \n  ggplot(aes(x = type, y = deal_value)) + \n  geom_col(stat=\"identity\", fill=\"#69b3a2\") +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(x = \"Investor Type\", y = \"Total Value of Deals\", title = \"Domestic vs. Foreign Investment\") +\n  theme_bw()\n\n\n\n\n\n\n1.2.6 Analysing Country Profile of Investors\nAlthough number of deals accomplished by local investors is higher than foreigners, total value of transactions completed by foreign investors is 12 times higher than locals.\n\nstartup_country_graph <- startup_country %>%   \n  group_by(country_name) %>% \n  summarise(country_total = sum(new_value, na.rm = TRUE), country_number = n()) %>%\n  arrange(desc(country_total)) %>% \n  print()\n\n# A tibble: 22 × 3\n   country_name country_total country_number\n   <chr>                <dbl>          <int>\n 1 USA            1851560871              25\n 2 UAE             642850000               4\n 3 Qatar           359695000               4\n 4 Japan           358750000               1\n 5 Turkey          273386559.            254\n 6 UK              137790314.             13\n 7 Brazil           42666667.              1\n 8 France           32000000               2\n 9 Finland          10000000               1\n10 Germany           7635684.              4\n# … with 12 more rows\n\nstartup_country_graph$country_name[startup_country_graph$country_name == \"UAE\"] = \"United Arab Emirates\"\n\n# Graph investment deals and number of transactions of highest 10 countries in 2021\nstartup_country_graph %>% \n  arrange(country_total) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_total) %>% \n  ggplot(aes(x = Country, y = country_total)) +\n  geom_col(stat = \"identity\", fill=\"#69b3a2\") + \n  coord_flip() +  \n  scale_y_continuous(labels = comma_format(big.mark = \".\",\n                                           decimal.mark = \",\")) +\n  labs(y = \"Total Value of Deals\", title = \"Value of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\nstartup_country_graph %>% \n  arrange(country_number) %>% \n  mutate(Country=factor(country_name, country_name)) %>%\n  top_n(n = 10, wt = country_number) %>% \n  ggplot(aes(x = Country, y = country_number)) +\n  geom_col(stat=\"identity\", fill=\"#69b3a2\") + \n  coord_flip() +\n  labs(y = \"Number of Deals\", title = \"Number of Startup Deals in 2021 (per Investor's Origin Country)\") +\n  theme_bw()\n\n\n\n## Alternative way to demonstrate geographic variation of investments into startups\n\nworld_map <- map_data(\"world\")\nworld_map <- subset(world_map, region != \"Antarctica\")\n\n# World heat map plot\nggplot(startup_country_graph) +\n  geom_map(\n    dat = world_map, map = world_map, aes(map_id = region),\n    fill = \"white\", color = \"#7f7f7f\", size = 0.25\n  ) +\n  geom_map(map = world_map, aes(map_id = country_name, fill = country_total/1e6), size = 0.25) +\n  scale_fill_gradient(low = \"#56B1F7\", high = \"#132B43\", name = \"Investments\\n(Million USD)\") +\n  expand_limits(x = world_map$long, y = world_map$lat) + labs(title = \"Geographic Distribution of Startup Investments in 2021\") +\n  theme(axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank())"
  },
  {
    "objectID": "index.html#group-members-in-alphabetical-order-is-given-below",
    "href": "index.html#group-members-in-alphabetical-order-is-given-below",
    "title": "Time and Space Progress Journal",
    "section": "Group Members in alphabetical order is given below:",
    "text": "Group Members in alphabetical order is given below:\n\nGülhan Demirel Dilek\nOrhun Doğan\nYener Alboğa\nYiğit Onay\nZeynep Yağmur Güner"
  },
  {
    "objectID": "index.html#group-project-details",
    "href": "index.html#group-project-details",
    "title": "Time and Space Progress Journal",
    "section": "Group Project Details",
    "text": "Group Project Details\nOur group project is about exploration of financial soundness of Turkish economy based on micro data of real sector companies.\nTo be specific, our study aims to present an overview of financial status of real sector companies based on their financial statements such as balance sheets and income statements. Liquidity, Leverage and Profitability metrics are used to assess financial fragility/strength of the economy for the period between 2009 and 2021. In this respect, a scorecard based on derived Financial Fragility Index for each sector has been constructed to evaluate sectors comparatively. Finally, a brief analysis of sectors is presented with respect to their position in international trade.\n\nData Preparation\nExploratory Data Analysis\nProject Report\nPresentation\nShiny App"
  },
  {
    "objectID": "data_prep.html#main-data-for-our-project",
    "href": "data_prep.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\nsector_info %>% head()\n\n# A tibble: 6 × 3\n  sector_code sector_name     group       \n  <chr>       <chr>           <chr>       \n1 A           Agriculture     Agriculture \n2 B           Mining          Industry    \n3 C           Manufacturing   Industry    \n4 D           Electricity_Gas Industry    \n5 E           Water_Supply    Industry    \n6 F           Construction    Construction\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "data_prep.html#other-relational-datasets",
    "href": "data_prep.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  },
  {
    "objectID": "Data_Preparation_Turkstat.html#main-data-for-our-project",
    "href": "Data_Preparation_Turkstat.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\nsector_info %>% head()\n\n# A tibble: 6 × 3\n  sector_code sector_name     group       \n  <chr>       <chr>           <chr>       \n1 A           Agriculture     Agriculture \n2 B           Mining          Industry    \n3 C           Manufacturing   Industry    \n4 D           Electricity_Gas Industry    \n5 E           Water_Supply    Industry    \n6 F           Construction    Construction\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "Data_Preparation_Turkstat.html#other-relational-datasets",
    "href": "Data_Preparation_Turkstat.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  },
  {
    "objectID": "data_preparation_turkstat.html#main-data-for-our-project",
    "href": "data_preparation_turkstat.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\nsector_info %>% head()\n\n# A tibble: 6 × 3\n  sector_code sector_name     group       \n  <chr>       <chr>           <chr>       \n1 A           Agriculture     Agriculture \n2 B           Mining          Industry    \n3 C           Manufacturing   Industry    \n4 D           Electricity_Gas Industry    \n5 E           Water_Supply    Industry    \n6 F           Construction    Construction\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "data_preparation_turkstat.html#other-relational-datasets",
    "href": "data_preparation_turkstat.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  },
  {
    "objectID": "index.html#group-members",
    "href": "index.html#group-members",
    "title": "Time and Space Progress Journal",
    "section": "Group Members",
    "text": "Group Members\n\nGülhan Demirel Dilek\nOrhun Doğan\nYener Alboğa\nYiğit Onay\nZeynep Yağmur Güner"
  },
  {
    "objectID": "dataprepturkstat.html#main-data-for-our-project",
    "href": "dataprepturkstat.html#main-data-for-our-project",
    "title": "2  Data Preparation",
    "section": "2.1 Main Data for our Project",
    "text": "2.1 Main Data for our Project\nBalance sheet, Income statement and other information for Real Sector in sectoral breakdown for the period between 2009 and 2021\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(knitr)\n\n\n# Read sector info data\nsector_info <- read_excel(\"docs/Project_Data_TURKSTAT/Sector_info.xlsx\")\n\nsaveRDS(sector_info, \"docs/Project_Data/sector_grouping.rds\")\n\n#Sectoral grouping is given in the table below.\nkable(sector_info)\n\n\n\n\nsector_code\nsector_name\ngroup\n\n\n\n\nA\nAgriculture\nAgriculture\n\n\nB\nMining\nIndustry\n\n\nC\nManufacturing\nIndustry\n\n\nD\nElectricity_Gas\nIndustry\n\n\nE\nWater_Supply\nIndustry\n\n\nF\nConstruction\nConstruction\n\n\nG\nWholesale_Retail_Trade\nServices\n\n\nH\nTransportation\nServices\n\n\nI\nAccomodation_Food\nServices\n\n\nJ\nInformation\nServices\n\n\nL\nReal_Estate\nServices\n\n\nM\nProfessional_Activities\nServices\n\n\nN\nAdministrative_Activities\nServices\n\n\nP\nEducation\nServices\n\n\nQ\nHealth\nServices\n\n\nR\nEntertainment\nServices\n\n\nS\nOther_Services\nServices\n\n\n\n\n# Read Excel Data for company info regarding number of employees for different company sizes.\ncompany_info <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_company_info.xlsx\")\n\n# Drop columns whose values are all NA\ncompany_info <- company_info %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Drop rows whose values except first column are all NA\ncompany_info <- company_info %>% \n  filter(!if_all(2:ncol(company_info), is.na))\n\n# Fill first column with previous values\ncompany_info <- company_info %>% \n  fill(1) \n\n# Fill second column with previous values\ncompany_info <- company_info %>% \n  fill(2)\n\n# Fill NA in first row with previous values\nfirst_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[1,2:ncol(company_info)] <- t(first_row)\n\n# Fill NA in second row with previous values\nsecond_row <- company_info %>% \n  filter_all(any_vars(is.na(.))) %>% \n  slice(1) %>% \n  as.data.frame() %>% \n  pivot_longer(-1) %>% \n  fill(value, .direction = \"down\") %>% \n  select(value) %>% \n  as.matrix()\n\ncompany_info[2,2:ncol(company_info)] <- t(second_row)\n\n# Drop cell values before blanks\ncompany_info <- company_info %>% as.matrix() %>% gsub(\".*\\r\\n\", \"\", .) %>% as_tibble()\n\n#Drop columns with share (%) \ncond <- !(company_info[3,] == \"(%)\") %>% as.vector()\ncompany_info <- company_info[,cond]\n\n#Drop columns with entity types\ncond_1 <- !(company_info[2,] == \"Entity Types\") %>% as.vector()\ncompany_info <- company_info[, cond_1]\n# Drop row with duplicate number values\ncompany_info <- company_info[-3,]\n\n\ncompany_info[2,] <- as.list(company_info[2,] %>% gsub(pattern = \" \", replacement = \"_\", company_info))\n\n\nheader_new <- paste(company_info[1,], company_info[2,], sep = \"/\")\nheader_new[1:2] <-  c(\"sector\", \"size\")\n\nnames(company_info) <- header_new\ncompany_info <-  company_info %>% \n  filter(!(sector %in% c(\"\", \"Türkiye\")))\n\ncompany_info <- company_info %>% \n  pivot_longer(-c(sector, size)) %>% \n  separate(name, into = c(\"year\", \"number\"), sep = \"/\")\n\ncompany_info$number <- company_info$number %>% \n  gsub(pattern = \".companıes\", replacement = \"_companies\")\n\ncompany_info %>% \n  pivot_wider(names_from = number, values_from = value)\n\n# A tibble: 1,105 × 5\n   sector                              size  year  Number_of_companies Number_…¹\n   <chr>                               <chr> <chr> <chr>               <chr>    \n 1 A-Agrıculture, forestry and fishing Total 2009  5558                32584    \n 2 A-Agrıculture, forestry and fishing Total 2010  6731                36849    \n 3 A-Agrıculture, forestry and fishing Total 2011  7198                41546    \n 4 A-Agrıculture, forestry and fishing Total 2012  7312                44814    \n 5 A-Agrıculture, forestry and fishing Total 2013  7682                47135    \n 6 A-Agrıculture, forestry and fishing Total 2014  7944                50240    \n 7 A-Agrıculture, forestry and fishing Total 2015  8478                54175    \n 8 A-Agrıculture, forestry and fishing Total 2016  9226                57025    \n 9 A-Agrıculture, forestry and fishing Total 2017  9690                58203    \n10 A-Agrıculture, forestry and fishing Total 2018  10194               63918    \n# … with 1,095 more rows, and abbreviated variable name ¹​Number_of_employees\n\ncompany_info$sector_code <- company_info$sector %>% gsub(\"-.*\", \"\", .)\ncompany_info <-  company_info %>% \n  select(sector_code, everything()) %>% \n  select(-sector)\n\ncompany_info$value <- as.double(company_info$value)\n\ncompany_info <- \n  left_join(company_info, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(company_info, \"docs/Project_Data/sector_information.rds\")\n\ncompany_info %>% head()\n\n# A tibble: 6 × 7\n  sector_code sector_name group       size  year  number              value\n  <chr>       <chr>       <chr>       <chr> <chr> <chr>               <dbl>\n1 A           Agriculture Agriculture Total 2009  Number_of_companies  5558\n2 A           Agriculture Agriculture Total 2009  Number_of_employees 32584\n3 A           Agriculture Agriculture Total 2010  Number_of_companies  6731\n4 A           Agriculture Agriculture Total 2010  Number_of_employees 36849\n5 A           Agriculture Agriculture Total 2011  Number_of_companies  7198\n6 A           Agriculture Agriculture Total 2011  Number_of_employees 41546\n\n# Read Balance Sheet Data \ncompany_bs <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_b_s.xlsx\", \n                         range = \"A4:O4032\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n\ncompany_bs <- company_bs %>% \n  fill(sector_code)\n\ncompany_bs <- \n  company_bs[!is.na(company_bs[,3]),]\n\ncompany_bs <- company_bs[-1,]\n\n\ncompany_bs$sector_code <- \n  company_bs$sector_code %>% \n  gsub(\".*\\r\\n\", \"\", .) %>% \n  gsub(\"-.*\", \"\", .)\n\n\ncompany_bs$accounts <- company_bs$accounts %>% sub(\"^[^\\r\\n]+\", \"\",.)\n\ncompany_bs$accounts <- company_bs$accounts %>% gsub(\"\\r\\n\", \"\",.)\n\ncompany_bs <- company_bs %>% \n  pivot_longer(-c(sector_code,accounts), names_to = \"year\", values_to = \"value\")\n\n\ncompany_bs <- company_bs %>% select(sector_code, everything())\ncompany_bs <- \n  left_join(company_bs, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_bs$year <- as.integer(company_bs$year)\n\nsaveRDS(company_bs, \"docs/Project_Data/balance_sheet.rds\")\n\ncompany_bs %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts          year    value\n  <chr>       <chr>       <chr>       <chr>            <int>    <dbl>\n1 A           Agriculture Agriculture I-Current assets  2009  3744238\n2 A           Agriculture Agriculture I-Current assets  2010  4946459\n3 A           Agriculture Agriculture I-Current assets  2011  6652950\n4 A           Agriculture Agriculture I-Current assets  2012  8155273\n5 A           Agriculture Agriculture I-Current assets  2013 10465125\n6 A           Agriculture Agriculture I-Current assets  2014 12143122\n\n# Read Income Statement Data\n\ncompany_is <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_i_s.xlsx\", \n                         range = \"A4:O921\",  \n                         col_names = c(\"sector_code\", \"accounts\", 2009:2021))\n\n# Fill sectors in first column with previous observations\ncompany_is <- company_is %>% \n  fill(sector_code)\n\n# Remove blank rows\ncompany_is <- company_is[!is.na(company_is[,3]),]\n\n# Remove redundant first row\ncompany_is <- company_is[-1,]\n\n# Remove linespaces from sectors and accounts columns so that english phrases remain\ncompany_is$sector_code <- company_is$sector_code %>% gsub(\"- .*\", \"\", .)\n\n\n# pivot data into longer (panel) format\ncompany_is <- company_is %>% \n  pivot_longer(-c(sector_code, accounts), names_to = \"year\", values_to = \"value\")\ncompany_is <- company_is %>% select(sector_code,  everything())\ncompany_is <- \n  left_join(company_is, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\ncompany_is$accounts <- company_is$accounts %>% gsub(\".*\\r\\n\", \"\", .)\n\ncompany_is$year <- company_is$year %>% as.integer()\n\nsaveRDS(company_is, \"docs/Project_Data/income_statement.rds\")\n\ncompany_is %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name group       accounts       year    value\n  <chr>       <chr>       <chr>       <chr>         <int>    <dbl>\n1 A           Agriculture Agriculture A-Gross sales  2009  5268108\n2 A           Agriculture Agriculture A-Gross sales  2010  6507636\n3 A           Agriculture Agriculture A-Gross sales  2011  8440778\n4 A           Agriculture Agriculture A-Gross sales  2012 10095319\n5 A           Agriculture Agriculture A-Gross sales  2013 11998750\n6 A           Agriculture Agriculture A-Gross sales  2014 14979503"
  },
  {
    "objectID": "dataprepturkstat.html#other-relational-datasets",
    "href": "dataprepturkstat.html#other-relational-datasets",
    "title": "2  Data Preparation",
    "section": "2.2 Other Relational Datasets:",
    "text": "2.2 Other Relational Datasets:\nWe explore other datasets relevant to our main data that will be used in our exploratory data analysis in the following sections:\n\n2.2.1 Employment data: Labor Cost Index and Gender Distribution\n\n# Read Employment Data \nemployment_male <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"Z6:AW14\")\nemployment_female <-\n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_employment.xlsx\", \n             range = \"AY6:BW14\")\n\n# Create new column as gender\nemployment_male$gender <- c(\"male\")\nemployment_female$gender <- c(\"female\")\n\n# drop first row and columns whose values are all NA\nemployment_male <-  employment_male[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\nemployment_female <-  employment_female[-1,] %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\n# Create a quarterly time series starting 2021Q1 and ending 2022Q3\n\nemployment_male[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\nemployment_female[,2] <- seq.Date(from = as.Date(\"2021-03-30\"), to = as.Date(\"2022-09-30\"), by = \"quarter\")\n\n# Rearrange tibble columns such that gender comes first\nemployment_male <- employment_male[,-1] %>% \n  select(gender, everything())\n\nemployment_female <- employment_female[,-1] %>% \n  select(gender, everything())\n\n# Change column name of date column\ncolnames(employment_male)[2] <- \"date\"\ncolnames(employment_female)[2] <- \"date\"\n\n\nemployment <- rbind(employment_female, employment_male)\ncolnames(employment) <- colnames(employment) %>% gsub(\".*[(]([^.]+)[)].*\", \"\\\\1\", .)\nemployment <- employment %>% select(-3)\n\nemployment$D <- employment$`D+E`/ 2\nemployment$E <- employment$`D+E`/ 2\n\nemployment$S <- employment$`S+T+U`/ 3\nemployment$T <- employment$`S+T+U`/ 3\nemployment$U <- employment$`S+T+U`/ 3\n\nemployment <- employment %>% \n  select(-c(\"D+E\", \"S+T+U\")) %>% \n  pivot_longer(-c(\"gender\", \"date\"), names_to = \"sector_code\", values_to = \"number\") %>% \n  left_join(., sector_info, by = \"sector_code\")\n\nemployment <- employment[!is.na(employment$sector_name),]\n\nsaveRDS(employment, \"docs/Project_Data/employment.rds\")\n\nemployment\n\n# A tibble: 238 × 6\n   gender date       sector_code number sector_name             group       \n   <chr>  <date>     <chr>        <dbl> <chr>                   <chr>       \n 1 female 2021-03-30 A             1766 Agriculture             Agriculture \n 2 female 2021-03-30 B                6 Mining                  Industry    \n 3 female 2021-03-30 C             1399 Manufacturing           Industry    \n 4 female 2021-03-30 F               74 Construction            Construction\n 5 female 2021-03-30 G             1004 Wholesale_Retail_Trade  Services    \n 6 female 2021-03-30 H              105 Transportation          Services    \n 7 female 2021-03-30 I              309 Accomodation_Food       Services    \n 8 female 2021-03-30 J               69 Information             Services    \n 9 female 2021-03-30 L               68 Real_Estate             Services    \n10 female 2021-03-30 M              395 Professional_Activities Services    \n# … with 228 more rows\n\n# Read labor cost Index data\nlabor_cost_index <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_labor_cost_index.xlsx\", range = \"A4:P54\")\n\ncolnames(labor_cost_index)[3] <- \"date\"\nlabor_cost_index$date <-  seq.Date(from = as.Date(\"2010-03-30\"), to = as.Date(\"2022-06-30\"), by = \"quarter\")\nlabor_cost_index <- labor_cost_index[,c(-1,-2)]\ncolnames(labor_cost_index) <- colnames(labor_cost_index) %>% gsub(\"\\\\..*\", \"\", .)\n\nlabor_cost_index <- \n  labor_cost_index %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\") %>% \n  left_join(.,sector_info, by=\"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nlabor_cost_index <- labor_cost_index[!is.na(labor_cost_index$sector_name),]\n\nsaveRDS(labor_cost_index, \"docs/Project_Data/labor_cost.rds\")\n\nlabor_cost_index %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name            group        date       value\n  <chr>       <chr>                  <chr>        <date>     <dbl>\n1 B           Mining                 Industry     2010-03-30  59.4\n2 C           Manufacturing          Industry     2010-03-30  57  \n3 D           Electricity_Gas        Industry     2010-03-30  70.4\n4 E           Water_Supply           Industry     2010-03-30  54.2\n5 F           Construction           Construction 2010-03-30  59.9\n6 G           Wholesale_Retail_Trade Services     2010-03-30  59  \n\n\n\n\n2.2.2 Economic Growth Data: Gross Domestic Product\n\n# Read GDP Index Data\ngdp <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_gdp.xlsx\", \n                  range = \"A7:C318\")\n\n# Rename columns\ncolnames(gdp) <- c(\"sector\", \"year\", \"gdp_index\")\n\n# Filter NA rows\ngdp <- gdp %>% \n  filter(!is.na(sector))\nsaveRDS(gdp, \"docs/Project_Data/gdp.rds\")\n\ngdp %>% head()\n\n# A tibble: 6 × 3\n  sector  year gdp_index\n  <chr>  <dbl>     <dbl>\n1 Total   1998      70.7\n2 Total   1999      68.3\n3 Total   2000      73.1\n4 Total   2001      68.9\n5 Total   2002      73.3\n6 Total   2003      77.6\n\n\n\n\n2.2.3 International Trade Data: Terms of Trade, Export and Import\n\n# Read Terms of Trade Data\ntot <- \n  read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ToT.xlsx\", range = \"C4:BI157\")\n\ntot <- tot %>% \n  select(contains(\"ABD Doları\"))\n\ntot$date <-  seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\n\ntot <- tot[,26:30]\n\ntot <- tot %>% select(date, everything())\n\ntot <- tot[!is.na(tot[,3]),]\n\ntot <- tot %>% pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"value\")\n\ntot$sector_code <- tot$sector_code %>% gsub(\"[.].*\", \"\",.)\n\ntot <- left_join(tot, sector_info, by = \"sector_code\") %>% select(sector_code, sector_name, group, everything())\n\nsaveRDS(tot, \"docs/Project_Data/terms_of_trade.rds\")\n\ntot %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name   group       date       value\n  <chr>       <chr>         <chr>       <date>     <dbl>\n1 A           Agriculture   Agriculture 2013-01-01  75.6\n2 B           Mining        Industry    2013-01-01  66.8\n3 C           Manufacturing Industry    2013-01-01  99.5\n4 E           Water_Supply  Industry    2013-01-01  93.7\n5 A           Agriculture   Agriculture 2013-02-01  76.2\n6 B           Mining        Industry    2013-02-01  65.5\n\n# Read Exports  Data\nexport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_exports.xlsx\", \n                     range = \"A5:D854\")\n\nexport <- export %>% filter(!if_all(, is.na))\n\nexport[1,1] <- as.character(2022) \n\nexport$Year <- export$Year %>% as.double()\n\nexport <- export %>% fill(Year)\n\nexport <- export[!is.na(export[,2]),]\n\ncolnames(export) <- c(\"year\", \"sector_code\", \"sector_name\", \"export\")\n\nexport$export <- gsub(pattern = \"-\", replacement = 0, export$export) %>% as.double()\n\nexport <-  export[export$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nexport <- \n  left_join(export, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\n\nexport\n\n# A tibble: 90 × 5\n   sector_code sector_name             group        year      export\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022   5434049. \n 2 B           Mining                  Industry     2022   3508870. \n 3 C           Manufacturing           Industry     2022 178162765. \n 4 D           Electricity_Gas         Industry     2022    211875. \n 5 E           Water_Supply            Industry     2022    666611. \n 6 H           Transportation          Services     2022        15.0\n 7 J           Information             Services     2022    157891. \n 8 M           Professional_Activities Services     2022       110. \n 9 R           Entertainment           Services     2022     10055. \n10 A           Agriculture             Agriculture  2021   7156041. \n# … with 80 more rows\n\n# Read Imports Data\nimport <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_imports.xlsx\", \n                     range = \"A5:D854\")\n\nimport <- import %>% filter(!if_all(, is.na))\n\nimport[1,1] <- as.character(2022) \n\nimport$Year <- import$Year %>% as.double()\n\nimport <- import %>% fill(Year)\n\nimport <- import[!is.na(import[,2]),]\n\ncolnames(import) <- c(\"year\", \"sector_code\", \"sector_name\", \"import\")\n\nimport$import <- gsub(pattern = \"-\", replacement = 0, import$import) %>% as.double()\n\nimport <-  import[import$sector_code %in% sector_info$sector_code,] %>% select(-sector_name)\n\nimport <- \n  left_join(import, sector_info, by = \"sector_code\") %>%\n  select(sector_code, sector_name, group, everything())\nimport\n\n# A tibble: 89 × 5\n   sector_code sector_name             group        year      import\n   <chr>       <chr>                   <chr>       <dbl>       <dbl>\n 1 A           Agriculture             Agriculture  2022  11311875. \n 2 B           Mining                  Industry     2022  58364861. \n 3 C           Manufacturing           Industry     2022 191327777. \n 4 D           Electricity_Gas         Industry     2022    217690. \n 5 E           Water_Supply            Industry     2022   9883865. \n 6 H           Transportation          Services     2022        15.1\n 7 J           Information             Services     2022    128615. \n 8 M           Professional_Activities Services     2022      1261. \n 9 R           Entertainment           Services     2022     13120. \n10 A           Agriculture             Agriculture  2021  12082080. \n# … with 79 more rows\n\n#Merge exports and imports data\ntrade <- inner_join(export, import, by = c(\"sector_code\", \"sector_name\", \"year\", \"group\"))\n\nsaveRDS(trade, \"docs/Project_Data/trade.rds\")\ntrade %>% head()\n\n# A tibble: 6 × 6\n  sector_code sector_name     group        year      export      import\n  <chr>       <chr>           <chr>       <dbl>       <dbl>       <dbl>\n1 A           Agriculture     Agriculture  2022   5434049.   11311875. \n2 B           Mining          Industry     2022   3508870.   58364861. \n3 C           Manufacturing   Industry     2022 178162765.  191327777. \n4 D           Electricity_Gas Industry     2022    211875.     217690. \n5 E           Water_Supply    Industry     2022    666611.    9883865. \n6 H           Transportation  Services     2022        15.0        15.1\n\n\n\n\n2.2.4 Price Data: Producer Price Index\n\n# Read PPI Data\nppi_1 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_new.xlsx\", \n                     range = \"A4:AH158\")\n\nppi_1 <- ppi_1 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_1)[1:2] <- c(\"year\", \"month\")\nppi_1$date <- seq.Date(from = as.Date(\"2010-01-01\"), to = as.Date(\"2022-10-01\"), by = \"month\")\nppi_1 <- ppi_1[,c(-1,-2)]\nppi_1 <- ppi_1 %>% select(date, everything())\n\nppi_1 <- ppi_1 %>% select(date, (ncol(.)-3):ncol(.))\n\ncolnames(ppi_1) <-  colnames(ppi_1) %>% gsub(\"\\\\..*\", \"\", .)\nppi_1\n\n# A tibble: 154 × 5\n   date           B     C     D     E\n   <date>     <dbl> <dbl> <dbl> <dbl>\n 1 2010-01-01  220.  161.  169.  149.\n 2 2010-02-01  221.  162.  187.  149.\n 3 2010-03-01  220.  165.  189.  151.\n 4 2010-04-01  221.  166.  189.  151.\n 5 2010-05-01  227.  166.  191.  154.\n 6 2010-06-01  222.  165.  191.  157.\n 7 2010-07-01  228.  165.  192.  157.\n 8 2010-08-01  229.  165.  202.  155.\n 9 2010-09-01  231.  166.  203.  155.\n10 2010-10-01  228.  167.  202.  156.\n# … with 144 more rows\n\n# Read PPI Services Data\nppi_2 <- read_excel(\"docs/Project_Data_TURKSTAT/Project_data_ppi_services_new.xlsx\", \n                    range = \"A4:I73\")\nppi_2 <- ppi_2 %>% \n  fill(1) %>% \n  select_if(function(col) !all(is.na(col)))\n\ncolnames(ppi_2)[1:2] <- c(\"year\", \"month\")\n\nppi_2$date <- seq.Date(from = as.Date(\"2017-01-01\"), to = as.Date(\"2022-09-01\"), by = \"month\")\nppi_2 <- ppi_2[,c(-1,-2)]\nppi_2 <- ppi_2 %>% select(date, everything())\n\nppi_2 <- ppi_2 %>% select(date, everything())\ncolnames(ppi_2) <-  colnames(ppi_2) %>% gsub(\"\\\\..*\", \"\", .)\nppi_2\n\n# A tibble: 69 × 7\n   date           H     I     J     L     M     N\n   <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2017-01-01  96.3  94.6 102.   95.6  96.6  95.4\n 2 2017-02-01  95.8  94.9 104.   95.8  97.8  95.7\n 3 2017-03-01  96.3  95.9 101.   95.8  98.3  95.6\n 4 2017-04-01  97.6  97.0 102.   96.7  99.9  97.6\n 5 2017-05-01  97.5  98.5  99.5  96.5 101.   98.7\n 6 2017-06-01  98.4 101.   99.4  98.1  99.7 101. \n 7 2017-07-01 101.  104.   97.0 101.   98.6 103. \n 8 2017-08-01 103.  105.   97.2 101.   99.3 105. \n 9 2017-09-01 102.  104.   98.8 100.  101.  104. \n10 2017-10-01 102.  102.   99.7 105.  102.  101. \n# … with 59 more rows\n\n# Merge ppi and ppi services data\nppi <- left_join(ppi_1, ppi_2, by = \"date\")\nppi <- ppi %>% \n  pivot_longer(-c(\"date\"), names_to = \"sector_code\", values_to = \"index\")\n\n# Obtain conventional sector names and groupings\nppi <- \n  left_join(ppi, sector_info, by = \"sector_code\") %>% \n  select(sector_code, sector_name, group, everything())\n\nsaveRDS(ppi, \"docs/Project_Data/input_cost.rds\")\n\nppi %>% head()\n\n# A tibble: 6 × 5\n  sector_code sector_name       group    date       index\n  <chr>       <chr>             <chr>    <date>     <dbl>\n1 B           Mining            Industry 2010-01-01  220.\n2 C           Manufacturing     Industry 2010-01-01  161.\n3 D           Electricity_Gas   Industry 2010-01-01  169.\n4 E           Water_Supply      Industry 2010-01-01  149.\n5 H           Transportation    Services 2010-01-01   NA \n6 I           Accomodation_Food Services 2010-01-01   NA"
  },
  {
    "objectID": "eda.html#introduction",
    "href": "eda.html#introduction",
    "title": "3  Group Project EDA",
    "section": "Introduction",
    "text": "Introduction\nIn this report, an analysis of sectoral developments in Turkey for the period between 2009-2021 using various data sources from TURKSTAT is presented. Main theme is industry in our project and real sector is examined using various panel datasets. In this regard, our analysis consists of basically 4 parts which can be outlined as follows:\n\nClassification of firms based on their size on a sectoral level\nGender distribution in real sector firms\nFinancial analysis of the economy as a whole and sectoral level using sectoral company accounts data (prepared and published by TURKSTAT & CBRT together)\nRelationship between macro indicators and sectoral financial indicators based on micro_level sectoral data.\n\n\nLoad Necessary Packages for EDA\nThe libraries used in our analysis is given below:\n\n\nCode\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(ggridges)\nlibrary(scales)\nlibrary(gt)\nlibrary(rmarkdown)\nlibrary(quarto)\nlibrary(knitr)\nlibrary(data.table)\nlibrary(ggthemes)\nlibrary(viridis)\n\n\n\n\nLoad Necessary Datasets for EDA\nOur raw data obtained from TURKSTAT in xlsx format is processed in the previous section and converted to .rds file formats.\n\n\nCode\nbs <- readRDS(\"docs/Project_Data/balance_sheet.rds\")\ni_s <- readRDS(\"docs/Project_Data/income_statement.rds\")\ntrade_df <- readRDS(\"docs/Project_Data/trade.rds\")\nprice_df <- readRDS(\"docs/Project_Data/input_cost.rds\")\ngdp_df <- readRDS(\"docs/Project_Data/gdp.rds\")\n\n\n\n\nFew Data Manipulation Steps to Prepare Data for Final Stage\nBefore proceeding to EDA, a few minor data manipulation is accomplished to ready data for final use in our analysis.\n\n\nCode\nbs$accounts <- bs$accounts %>% gsub(\"\\\\s+\", \"_\", .)\n\nbs_df <- bs %>% \n  filter(accounts %in% c(\"I-Current_assets\", \n                         \"III-Short-term_liabilities\", \n                         \"IV-Long-term_liabilities\", \n                         \"Total_assets\", \n                         \"V-Own_funds\")) %>%\n  pivot_wider(names_from = accounts, values_from = value)\n\ni_s$accounts <- i_s$accounts %>% gsub(\"\\\\s+\", \"_\", .)\n\nnet_income <- i_s %>% \n  filter(accounts == \"Net_profit_or_loss_for_the_financial_year\") %>% \n  pivot_wider(names_from = accounts, values_from = value) %>% \n  pull(Net_profit_or_loss_for_the_financial_year)\n  \nbs_df <- bs_df %>% mutate(net_income_is = net_income)"
  },
  {
    "objectID": "eda.html#financial-indicators",
    "href": "eda.html#financial-indicators",
    "title": "3  Group Project EDA",
    "section": "Financial Indicators",
    "text": "Financial Indicators\nIn this section, we introduce three main financial indicators to be used in out analysis:\n1) Liquidity Indicator:\nLiquidity is a measure of a company’s ability to pay off its short-term liabilities—those that will come due in less than a year. Current Ratio is calculated as liquidity indicator as below:\n\\(Current\\,Ratio = \\frac{Current\\,Assets}{Short\\,Term\\,Liabilities}\\)\nA higher ratio indicates the business is more capable of paying off its short-term debts. These ratios will differ according to the industry, but in general ratios from 1.5 to 2.5 is acceptable. Lower ratios could indicate liquidity problems, while higher ones could signal there may be too much working capital tied up in inventory.\n2) Leverage Indicator:\nA leverage ratio is any one of several financial measurements that look at how much capital comes in the form of debt (loans) or assesses the ability of a company to meet its financial obligations. Ratio of total loans to total assets is used in our analysis to observe the reliance on liabilities.\n\\(Leverage = \\frac{Total\\,Loans}{Total\\,Assets}\\)\n3) Profitability Indicator:\nReturn on assets (ROA) is used in our analysis as a profitability indicator which refers to a financial ratio that indicates how profitable a company is in relation to its total assets. Market participants use ROA to see how well a company uses its assets to generate profit. Our calculation is based on the formula given below:\n\\(Return\\,on\\,Assets = \\frac{Net\\,Profit}{Total\\,Assets}\\)\n\n\nCode\nbs_df_new <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets))\n\nbs_df_new <- bs_df_new %>% \n  pivot_longer(cols = c(\"current_ratio\", \"leverage\", \"return_on_equity\", \"return_on_assets\"), \n               names_to = \"Indicator\", \n               values_to = \"Value\")\n\n\n\nBasic Financial Indicators of Turkish Economy\nIn this section, sectoral averages and standard devations of financial indicators are obtained and aggregated by using total assets of each sector as weights to obtain economy level financial indicators from 2009 to 2021.\n\nReal sector firms are observed to rely more on liability sources and the economy as a whole has become more leveraged in this period.\nLiquidity position of the firms deteriorated in this period although a slight correction is observed in the last few years.\nProfitability of real sector firms stayed on the positive territory although it followed a volatile pattern throughout the period.\nInteresting point regarding variation of these indicators among different sector is that leverage of real sector firms increase in a synchronised way so that the variation of leverage indicator between sectors diminishes significantly. On the contrary, an opposite picture is prevalent for liquidity and profitability of the sectors such that the variation across sectors increases significantly.\n\n\n\nCode\n#Calculation and plot of weighted average financial indicators\nbs_df_economy <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets), Total_assets)\n\n\nbs_df_economy_graph <- bs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = weighted.mean(current_ratio, Total_assets) * 100,\n            Leverage = weighted.mean(leverage, Total_assets) * 100,\n            Profitability = weighted.mean(return_on_assets, Total_assets) * 100)\n\nbs_df_economy_graph %>% \n  pivot_longer(-year, names_to = \"indicator_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~indicator_yearly, scales = \"free\") +\n  theme_bw() +\n  labs(y = \"Levels\", title = \"Weighted Average of Financial Indicators\")\n\n\n\n\n\nCode\n#Calculation and plot of standard deviation of financial indicators\nbs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = sd(current_ratio) * 10,\n            Leverage = sd(leverage) * 10,\n            Profitability = sd(return_on_assets) * 10) %>% \n  pivot_longer(-year, names_to = \"std_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~std_yearly, scales = \"free\") +\n  theme_bw()+\n  labs(y = \"Levels\", title = \"Standard Deviation of Financial Indicators\")\n\n\n\n\n\n\n\nTable of financial indicators for the economy from 2009 to 2021\nA table version of the previous plots is given below.\n\n\nCode\ncolnames(bs_df_economy_graph) <- c(\"Year\", \"Liquidity\", \"Leverage\", \"Profitability\")\nbs_df_economy_graph[,2:4] <- lapply(bs_df_economy_graph[,2:4], \n                                    FUN = function(x) round(x, 2))\nkable(bs_df_economy_graph)\n\n\n\n\n\nYear\nLiquidity\nLeverage\nProfitability\n\n\n\n\n2009\n132.77\n41.23\n2.98\n\n\n2010\n134.97\n41.31\n3.16\n\n\n2011\n130.74\n42.60\n1.06\n\n\n2012\n130.70\n42.72\n3.17\n\n\n2013\n128.67\n43.53\n1.74\n\n\n2014\n127.47\n43.70\n2.14\n\n\n2015\n124.81\n44.15\n1.95\n\n\n2016\n123.14\n44.52\n1.23\n\n\n2017\n123.65\n45.23\n2.56\n\n\n2018\n122.70\n46.20\n1.08\n\n\n2019\n124.03\n46.05\n2.87\n\n\n2020\n127.41\n46.52\n2.09\n\n\n2021\n128.45\n48.45\n1.83\n\n\n\n\n\n\n\nTime Series of Financial Indicators for each sector\nFinancial indicators are given for each sector below.\nConstruction, Mining, Information and Manufacturing are the sectors which have an upward trend in their liquidity position and deemed strong in terms of its level as of 2021 as compared to others.\nLeverage of real sector firms increased significantly in this period except Construction and Electricity-Gas sectors, which lowers the share of external liabilities in the financing of their assets and can be considered less risky as compared to the beginnning of the period.\nIn terms of ability to return assets into profits, winner sectors are Manufacturing, Information and Mining where as the harming effect of the COVID-19 is observed in Accomodation-Food, Entertainment and Transportation which is not surprising as these sectors are more dependent on social mobility and the recovery in the period after March-2020 is only gradual. A more benign picture can be observed in 2022 when a complete normalisation in Covid related restrictive policies has been observed. Furthermore, a consistent deterioration in the profits of Construction sector is eye-catching\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"current_ratio\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Liquidity Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"leverage\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Leverage Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"return_on_assets\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Profitability (ROA) Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\n\n\nScatter Plots of Financial Indicators\nIn the previous section, one dimensional evolution of sectors in time is outlined. Having obtained indicators for financial overview of Turkish Economy on a sectoral basis, temporal relationship between them is worth analysing.\nRegarding liquidity and leverage, there exists a clear negative association which is in effect for almost all of the sectors albeit with different degrees.The exception is Mining sector which experiences rise in leverage and liquidity positions at the same time.\nFor liquidity and profitability, expected outcome is observed such that real sector firms have a better liquidity when they are more profitable for the period in consider.\nLastly, profitability and leverage indicators among sectors demonstrate a trade-off such that in general firms with lower profit encounters a decline in the share of equity as a source of financing.\n\n\nCode\nbs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  ggplot(aes(x = leverage, y = current_ratio, color = sector_name)) +\n  geom_point() + \n  geom_smooth(method='lm', formula= y~x, se = FALSE) +\n  labs(title = \"Liquidity vs Leverage\", y = \"Liquidity\") +\n  theme_bw()\n\n\n\n\n\nCode\nbs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  ggplot(aes(x = current_ratio, y = return_on_assets, color = sector_name)) +\n  geom_point() + \n  geom_smooth(method='lm', formula= y~x, se = FALSE) +\n  labs(title = \"Profitability vs Liquidity\", y = \"Profitability\", x = \"Liquidity\") +\n  theme_bw()\n\n\n\n\n\nCode\nbs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  ggplot(aes(x = leverage, y = return_on_assets, color = sector_name)) +\n  geom_point() + \n  geom_smooth(method='lm', formula= y~x, se = FALSE) + \n  labs(title = \"Profitability vs Leverage\", y = \"Profitability\") +\n  theme_bw()\n\n\n\n\n\n\n\n2009 - 2019 Period Average of Financial Indicators\nA closer look for the perfomance of Turkish economy in the last two years is aimed to be investigated in comparison to previous years. 2020 and 2021 is important especially for diagnosing the effect of Covid-19 outbreak and its consequent impact on the financial status of real sector firms.\nFirstly, Transportation, Accomodation-Food, Real Estate and Professional Activities are the sectors whose liquidity position deteriorate most during Covid-19. This result is not abnormal as social distancing measures and decline in mobility affect those sectors most.The rest seems to be less affected and even there are sectors who experience a considerable improvement in terms of liquidity which might be due to frequency of our data. The covid-19 outbreak started in first quarter of 2020 and then the government policies to support the economy could be one reason for the improvement of the sectors.\nSecondly, leverage indicator seemed to rise throughout the economy except a few sectors which is considered natural in response to credit oriented policies of government to support real sector firms against Covid-19 shock.\nFinally, the winners are Mining, Manufacturing, Information and Health in terms of improvement in their profits and this improvement seemed to continue in 2021. On the other end of the picture, Transportation and Services sectors were seen to be in trouble in terms of profitability.\nLiquidity Indicator\n\n\nCode\nbs_df_average <-  bs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2009:2019) %>% \n  group_by(sector_name) %>% \n  summarise(liq_ave = mean(current_ratio), lev_ave = mean(leverage), pro_ave = mean(return_on_assets))\n\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, current_ratio)) %>% \n  pivot_wider(names_from = year, values_from = current_ratio) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"liq_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"liq_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Current Ratio\", x = \"Sectors\", title = \"Liquidity Indicator\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\nLeverage Indicator\n\n\nCode\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, leverage)) %>% \n  pivot_wider(names_from = year, values_from = leverage) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"lev_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"lev_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Leverage\", x = \"Sectors\", title = \"Leverage Indicator\", fill = \"Years\") + theme_bw() \n\n\n\n\n\nProfitability Indicator\n\n\nCode\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, return_on_assets)) %>% \n  pivot_wider(names_from = year, values_from = return_on_assets) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"pro_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"pro_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Profitability\", x = \"Sectors\", title = \"Return on Assets\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\n\n\nDensity Plots of Financial Indicators\n\n\nCode\n# Liquidity\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, current_ratio) %>% \n  arrange(year) %>% \n  ggplot(aes(x = current_ratio, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Liquidity\")\n\n\n\n\n\nCode\n# Leverage\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, leverage) %>% \n  arrange(year) %>% \n  ggplot(aes(x = leverage, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Leverage\")\n\n\n\n\n\nCode\n# Profitability\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, return_on_assets) %>% \n  arrange(year) %>% \n  ggplot(aes(x = return_on_assets, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") + \n  labs(y = \"Year\", x = \"Return on Assets\")"
  },
  {
    "objectID": "eda.html#financial-fragility-index",
    "href": "eda.html#financial-fragility-index",
    "title": "3  Group Project EDA",
    "section": "Financial Fragility Index",
    "text": "Financial Fragility Index\nUp until now, financial position of Turkish economy is evaluated based on the three indicators obtained through balance sheets and income statements of sectors. In this section, an index demonstrating financial healthiness of the sectors is constructed so that a comparative analysis of Turkish economy through time can be conducted on a holistic perspective.\nThe methodology used in the construction of Financial Fragility Index (FFI) consists of the following steps:\n1- For each financial indicator (Liquidity, Leverage and Profitability) percentile of each sector is found. To be more specific, the higher the rank of a sector, the worse it is in terms of financial soundness. In other words, for liquidity, the sector is less liquid, for leverage, the sector has higher leverage and for profitability, the sector is less profitable.\n2- After finding each sectors’ rank for each financial indicator, simple average is calculated and index value is obtained.\n3- The steps described above is repeated for each year between 2009-2021 and a time series of the index is found.\nAfter obtaining FFI, evolution of the index for each sector is illustrated in the graph below.\n\nServices sectors such as Accomodation-Food, Real Estate and Transportation have performed worse than other sectors and found themselves in a much more fragile position in terms of financial soundness\nAlthough the index alone can not be taken into account alone to conclude that a certain sector is riskier than others financially for a specific time point, time series evolution gives a glimpse of where the sectors are heading into in terms of their financial strength.\n\n\n\nCode\nbs_df_ffi <- bs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  group_by(year) %>% \n  mutate(liq_rank = percent_rank(current_ratio*-1), \n         lev_rank = percent_rank(leverage), \n         profit_rank = percent_rank(return_on_assets*-1)) %>% \n  mutate(fin_fra_index = (liq_rank + lev_rank + profit_rank)/3) %>% \n  select(-c(current_ratio:return_on_assets))\n\nbs_df_ffi %>% \n  select(c(sector_name, year, fin_fra_index)) %>% \n  pivot_longer(-c(sector_name, year), names_to = \"index\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() + \n  facet_wrap(~sector_name, scales = \"free\") + \n  labs(y = \"Financial Fragility Index\") +\n  theme_bw()\n\n\n\n\n\n\nHeatmap for 2021\nFor 2021, a cross sectional analysis demonstrates that services related sectors are considered most risky in terms of financial metrics defined previously.\n\nEducation is considered most risky sector mostly due to its poor liquidity and high leverage which increases the firms’ probability of default as it raises doubts about payment of short term debts.\nMining sector is the leading sector in terms of financial soundness according to all of the predefined metrics.\n\n\n\nCode\nheatmap_df <- bs_df_economy %>% \n  filter(year == 2021) %>% \n  select(sector_name, current_ratio, leverage, return_on_assets) %>% \n  mutate(ffi = bs_df_ffi %>% select(year, sector_name, fin_fra_index) %>% filter(year == 2021) %>% pull(fin_fra_index)) %>% \n  arrange(desc(ffi)) \n\ncolnames(heatmap_df) <- c(\"Sectors\", \"Liquidity\", \"Leverage\", \"Profitability\", \"Financial Fragility Index\")\n\nheatmap_df[,2:5] <- lapply(heatmap_df[,2:5], FUN = function(x) round(x*100, 2))\n\nheatmap_df %>% \n  gt() %>% \n  data_color(columns = 'Liquidity', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,2]), max(heatmap_df[,2])))) %>% \n  data_color(columns = 'Leverage', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,3]), max(heatmap_df[,3])))) %>% \n  data_color(columns = 'Profitability', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,4]), max(heatmap_df[,4])))) %>% \n  data_color(columns = 'Financial Fragility Index', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,5]), max(heatmap_df[,5]))))\n\n\n\n\n\n\n  \n  \n    \n      Sectors\n      Liquidity\n      Leverage\n      Profitability\n      Financial Fragility Index\n    \n  \n  \n    Education\n85.13\n62.71\n2.67\n75.00\n    Entertainment\n97.87\n54.81\n-7.14\n72.92\n    Other_Services\n101.94\n67.83\n0.73\n72.92\n    Accomodation_Food\n93.09\n44.88\n-8.47\n70.83\n    Real_Estate\n89.10\n31.88\n-14.45\n66.67\n    Administrative_Activities\n103.79\n56.77\n1.25\n62.50\n    Electricity_Gas\n94.94\n34.52\n-8.61\n60.42\n    Transportation\n105.57\n38.05\n-9.90\n58.33\n    Construction\n128.66\n53.06\n-0.40\n52.08\n    Professional_Activities\n96.05\n35.40\n-0.28\n52.08\n    Water_Supply\n120.21\n54.04\n2.45\n47.92\n    Agriculture\n123.27\n51.61\n2.26\n43.75\n    Wholesale_Retail_Trade\n131.77\n62.30\n3.46\n43.75\n    Health\n116.63\n40.70\n4.27\n33.33\n    Manufacturing\n148.98\n48.01\n7.62\n22.92\n    Information\n157.52\n36.48\n7.10\n14.58\n    Mining\n166.78\n28.28\n14.86\n0.00\n  \n  \n  \n\n\n\n\n\n\nInternational Trade\n\n\nCode\ntrade_df_new <- \n  trade_df %>% \n  mutate(net_export = (export - import)/1e6) %>% \n  filter(year != 2022) %>% \n  select(sector_name, year, net_export)\n\ndf_fin <- bs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value)\n\n\ntrade_df_new %>% \n  ggplot(aes(x = year, y = net_export))+\n  geom_line() +\n  facet_wrap(~sector_name, scales = \"free\")\n\n\n\n\n\nCode\ntrade_df_new %>% \n  group_by(sector_name) %>% \n  summarize(average = round(mean(net_export), 2)) %>% \n  arrange(average) %>% \n  kable(caption = \"Average Net Exports\")\n\n\n\nAverage Net Exports\n\n\nsector_name\naverage\n\n\n\n\nMining\n-26.80\n\n\nManufacturing\n-24.33\n\n\nWater_Supply\n-6.76\n\n\nAgriculture\n-3.34\n\n\nInformation\n-0.15\n\n\nElectricity_Gas\n-0.09\n\n\nEntertainment\n-0.02\n\n\nProfessional_Activities\n0.00\n\n\nTransportation\n0.00\n\n\n\n\n\nCode\ntrade_df_new %>% \n  filter(sector_name %in% c(\"Agriculture\", \"Manufacturing\", \"Mining\", \"Water_Supply\")) %>% \n  inner_join(df_fin %>% select(-sector_code, -group), by = c(\"sector_name\", \"year\")) %>% \n  ggplot(aes(x = net_export, y = return_on_assets))+\n  geom_point() + \n  geom_smooth(method='lm', formula= y~x, se = FALSE) + \n  facet_wrap(~sector_name, scales = \"free\")\n\n\n\n\n\nCode\ntrade_df_new %>% \n  filter(sector_name %in% c(\"Agriculture\", \"Manufacturing\", \"Mining\", \"Water_Supply\")) %>% \n  inner_join(df_fin %>% select(-sector_code, -group), by = c(\"sector_name\", \"year\")) %>% inner_join(bs_df_ffi %>% select(sector_name, year, fin_fra_index), by = c(\"sector_name\", \"year\")) %>% \n  ggplot(aes(x = net_export, y = fin_fra_index))+\n  geom_point() + \n  geom_smooth(method='lm', formula= y~x) + \n  facet_wrap(~sector_name, scales = \"free\")\n\n\n\n\n\n\n\nTradable vs Non-Tradable Sectors\n\n\nCode\ntradables <- c(\"Agriculture\", \"Manufacturing\", \"Mining\", \"Water_Supply\")\n\ndf_fin <- df_fin %>% inner_join(bs_df_ffi %>% select(sector_name, year, fin_fra_index), by = c(\"sector_name\", \"year\"))\n\ndf_fin %>% \n  select(-sector_code, -group) %>% \n  mutate(trade_group = ifelse(sector_name %in% tradables, \"tradable\", \"non_tradable\")) %>% \n  group_by(year, trade_group) %>% \n  summarize(financial_fragility_index = mean(fin_fra_index)) %>% \n  ggplot(aes(year, financial_fragility_index, color = trade_group)) + \n  geom_line()\n\n\n\n\n\n\n\nProducer Price Inflation\nFor each sector, average increases in producer prices (aka input costs) is calculated and given in the table below.\nTable shows average increases in input costs of sectors in Turkey from 2017 to 2021.\n\nTop 3 sectors with highest average price increases are Electricity-Gas, Manufacturing and Transportation with average price increases %23.4, %20.2 and %19.5 consecutively.\nInformation sector is the one experiencing the lowest inrease in its inputs.\n\n\n\nCode\npct_change <- function(x){(x / lag(x, 12) -1)*100}\n\nprice_df <- price_df %>% filter(date >= as.Date(\"2017-01-01\") & date < as.Date(\"2022-01-01\")) %>% \n  select(-sector_code, -group) %>% \n  pivot_wider(names_from = sector_name, values_from = index)\n\nprice_change_df <- cbind(date = price_df$date, sapply(price_df[,2 : 11], pct_change) %>% as_tibble())\n  \nyear_end_inf <- price_change_df %>% \n  filter(!is.na(Mining) & month(date) == 1) %>% \n  pivot_longer(-date, names_to = \"sector_name\", values_to = \"inflation\") \n\nyear_end_inf$date <- year(year_end_inf$date)\n\nyear_end_inf <- rename(year_end_inf, \"year\" = \"date\")\n\n#Average Inflation for the period 2018-2021\ntable_inflation <- year_end_inf %>% \n  group_by(sector_name) %>% \n  summarize(average_inflation = round(mean(inflation),2)) %>% \n  arrange(desc(average_inflation))\n\ncolnames(table_inflation) <- c(\"Sector Name\", \"Inflation (%, YoY)\")\n\nkable(table_inflation, caption = \"Average Increases in Input Costs\")\n\n\n\nAverage Increases in Input Costs\n\n\nSector Name\nInflation (%, YoY)\n\n\n\n\nElectricity_Gas\n23.44\n\n\nManufacturing\n20.15\n\n\nTransportation\n19.49\n\n\nAdministrative_Activities\n17.89\n\n\nAccomodation_Food\n17.28\n\n\nMining\n17.04\n\n\nProfessional_Activities\n14.38\n\n\nReal_Estate\n11.53\n\n\nWater_Supply\n9.76\n\n\nInformation\n3.70\n\n\n\n\n\n\n\nFinancial Indicators with Inflation data\n\n\nCode\ninner_join(bs_df_new %>% \n  select(-sector_code, -group) %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year >= 2018), year_end_inf, by = c(\"sector_name\", \"year\")) %>%\n  filter(inflation < 50) %>% # Omit outlier observation\n  ggplot(aes(x = inflation, y = return_on_assets)) + \n  geom_point() + \n  geom_smooth(method='lm', formula= y~x, se = FALSE)\n\n\n\n\n\n\n\nGrowth Dynamics\n\n\nCode\ngdp_df$pct_change <- (gdp_df$gdp_index / lag(gdp_df$gdp_index, 1) - 1) * 100\n\ngdp_df <- gdp_df %>% filter(!is.na(pct_change) & year >= 2009)\n\n# Real GDP Growth Summary Table \n\ngdp_df_tb <- gdp_df\n\nsetDT(gdp_df)\ngdp_df[, as.list(summary(pct_change)), by = sector]\n\n\n                                                                            sector\n 1:                                                                          Total\n 2:                                           A- Agriculture, forestry and fishing\n 3:                                                                 BCDE- Industry\n 4:                                                               C- Manufacturing\n 5:                                                                F- Construction\n 6:                                                                  GHI- Services\n 7:                                               J- Information and communication\n 8:                                          K- Financial and insurance activities\n 9:                                                      L- Real estate activities\n10:                MN- Professional, administrative and support service activities\n11: OPQ- Public administration, education, human health and social work activities\n12:                                                  RST- Other service activities\n           Min.    1st Qu.   Median     Mean   3rd Qu.      Max.\n 1:  -4.8395779  3.0774892 4.886660 5.160433  8.592330 11.602185\n 2:  -2.9425309  2.1253483 3.300360 3.089001  4.919164  9.256697\n 3:  -8.4482154  3.0346335 5.013533 5.891598  9.686020 17.412060\n 4:  -8.6292531  2.0623298 5.608743 6.006734  9.541860 19.967008\n 5: -15.9068747 -1.8675766 4.948874 4.295708  9.372647 24.878645\n 6: -10.2595397  1.2391890 6.406098 5.480158  8.243056 21.342332\n 7:  -2.1329458  5.0496912 6.798608 7.824746  9.225318 21.950574\n 8:  -6.2618952  3.0949580 7.524540 9.466583 10.227967 30.157813\n 9:  -0.1600322  2.3612458 2.792944 2.943916  3.599191  4.933052\n10:  -5.1717142 -0.1843973 8.222537 6.748606 12.052047 16.967597\n11:   1.2629144  2.9946977 4.645327 4.531002  5.360318 10.147852\n12:  -0.3814016  4.2987391 5.805904 7.307440  8.562325 24.807844\n\n\nCode\ngdp_df_tb$sector <- gdp_df_tb %>% \n  select(-gdp_index) %>% .$sector %>% gsub(\"-.*\", \"\", .)\n\n\nbs_df_new <- bs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  left_join(bs_df_ffi %>% select(sector_code, year, fin_fra_index), by = c(\"sector_code\", \"year\")) %>% \n  pivot_longer(-c(sector_code : year), names_to = \"Indicator\", values_to = \"Value\")\n\nfin_ind_group <- bs_df_new %>% \n  select(sector_code, year, Indicator, Value) %>% \n  mutate(group = case_when(sector_code == \"A\" ~ \"A\", \n            sector_code %in% c(\"B\", \"C\", \"D\", \"E\") ~ \"BCDE\", \n            sector_code == \"F\" ~ \"F\",\n            sector_code %in% c(\"G\", \"H\", \"I\") ~ \"GHI\",\n            sector_code == \"J\" ~ \"J\",\n            sector_code == \"L\" ~ \"L\",\n            sector_code %in% c(\"M\", \"N\") ~ \"MN\",\n            TRUE ~ \"other\")) %>% \n  filter(group != \"other\") %>% \n  left_join(bs_df %>% select(sector_code, year, Total_assets), Total_assets, by = c(\"sector_code\", \"year\")) %>%\n  select(-sector_code) %>% \n  group_by(group, year, Indicator) %>% \n  summarise(value = weighted.mean(Value, Total_assets)) %>% pivot_wider(names_from = Indicator, values_from = value)\n\nheader <- c(\"A\", \"BCDE\", \"F\", \"GHI\", \"J\", \"L\", \"MN\")\nnames <- c(\"Agriculture\", \"Industry\", \"Construction\", \"Services\", \"Information\", \"Real Estate\", \"Other Services\")\ngrowth_info <- data.frame(header, names)\n\ngrowth_df <- left_join(fin_ind_group, gdp_df_tb %>% select(-gdp_index),by = c(\"group\" = \"sector\", \"year\"))\ngrowth_df <- growth_df %>% \n  left_join(growth_info, by = c(\"group\" = \"header\"))\n\ngrowth_df %>% \n  ggplot(aes(lag(pct_change,1), fin_fra_index)) +\n  geom_point() + \n  facet_wrap(~names,  scales = \"free\") + \n  geom_smooth(method='lm', formula= y~x, se = FALSE)"
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "3  Group Project EDA",
    "section": "",
    "text": "library(tidyr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(readxl)\nlibrary(ggridges)\nlibrary(scales)\nlibrary(gt)\nlibrary(rmarkdown)\nlibrary(quarto)\nlibrary(knitr)\nlibrary(data.table)\nlibrary(ggthemes)\nlibrary(viridis)\n\n\n\n\n\nbs <- readRDS(\"docs/Project_Data/balance_sheet.rds\")\ni_s <- readRDS(\"docs/Project_Data/income_statement.rds\")\ntrade_df <- readRDS(\"docs/Project_Data/trade.rds\")\nprice_df <- readRDS(\"docs/Project_Data/input_cost.rds\")\ngdp_df <- readRDS(\"docs/Project_Data/gdp.rds\")\n\n\n\n\n\nbs$accounts <- bs$accounts %>% gsub(\"\\\\s+\", \"_\", .)\n\nbs_df <- bs %>% \n  filter(accounts %in% c(\"I-Current_assets\", \n                         \"III-Short-term_liabilities\", \n                         \"IV-Long-term_liabilities\", \n                         \"Total_assets\", \n                         \"V-Own_funds\")) %>%\n  pivot_wider(names_from = accounts, values_from = value)\n\ni_s$accounts <- i_s$accounts %>% gsub(\"\\\\s+\", \"_\", .)\n\nnet_income <- i_s %>% \n  filter(accounts == \"Net_profit_or_loss_for_the_financial_year\") %>% \n  pivot_wider(names_from = accounts, values_from = value) %>% \n  pull(Net_profit_or_loss_for_the_financial_year)\n  \nbs_df <- bs_df %>% mutate(net_income_is = net_income)"
  },
  {
    "objectID": "eda.html#sectoral-gender-distribution",
    "href": "eda.html#sectoral-gender-distribution",
    "title": "3  Group Project EDA",
    "section": "Sectoral Gender Distribution",
    "text": "Sectoral Gender Distribution\n\n\nCode\n#Gender distribution in main sectors that are agriculture, construction, industry and services.\nemp_data <- readRDS(\"docs/Project_Data/employment.rds\")\n\ntable <- emp_data %>%\n  group_by(group, gender) %>%\n  arrange(sector_name) %>%\n  mutate(\"value\") %>%\n  summarise(value=sum(number))\n\ntable\n\n\n# A tibble: 8 × 3\n# Groups:   group [4]\n  group        gender  value\n  <chr>        <chr>   <dbl>\n1 Agriculture  female 14311 \n2 Agriculture  male   20094 \n3 Construction female   616 \n4 Construction male   11822 \n5 Industry     female 11093 \n6 Industry     male   33554 \n7 Services     female 34383.\n8 Services     male   60572.\n\n\nCode\nggplot(table, aes(x=group, y=value, fill=gender)) +\n    geom_bar(stat='identity', position='dodge')\n\n\n\n\n\n\n\nCode\n#Detailed gender distribution\nemp_data <- readRDS(\"docs/Project_Data/employment.rds\")\n\ntable_2 <- emp_data %>%\n  group_by(sector_name, gender) %>%\n  arrange(sector_name) %>%\n  mutate(\"value\") %>%\n  summarise(value=sum(number))\n\nggplot(table_2, aes(x=sector_name, y=value, fill=gender)) +\n    geom_bar(stat='identity', position='dodge') + \n    theme(axis.text.x = element_text(angle=90, hjust=1))\n\n\n\n\n\n\n\nCode\n#Percentage of the number of employees in the sectors\nemp_data <- readRDS(\"docs/Project_Data/employment.rds\")\n\ntable_3 <- emp_data %>%\n  group_by(sector_name) %>%\n  arrange(sector_name) %>%\n  mutate(\"value\") %>%\n  summarise(value=sum(number))\n\ntotal = sum(table_3$value)\n\ntable_4 <- table_3 %>%\n  group_by(sector_name) %>%\n  arrange(sector_name) %>%\n  mutate(\"percentage\") %>%\n  summarise(percentage=100*value/total)\n\ntable_4\n\n\n# A tibble: 17 × 2\n   sector_name               percentage\n   <chr>                          <dbl>\n 1 Accomodation_Food              5.73 \n 2 Administrative_Activities      3.89 \n 3 Agriculture                   18.5  \n 4 Construction                   6.67 \n 5 Education                      6.90 \n 6 Electricity_Gas                0.640\n 7 Entertainment                  0.504\n 8 Health                         6.37 \n 9 Information                    0.970\n10 Manufacturing                 22.1  \n11 Mining                         0.570\n12 Other_Services                 1.10 \n13 Professional_Activities        3.49 \n14 Real_Estate                    1.14 \n15 Transportation                 5.24 \n16 Water_Supply                   0.640\n17 Wholesale_Retail_Trade        15.6"
  },
  {
    "objectID": "eda.html#firm-size-comparison-by-sector-groups",
    "href": "eda.html#firm-size-comparison-by-sector-groups",
    "title": "3  Group Project EDA",
    "section": "Firm Size Comparison by Sector Groups",
    "text": "Firm Size Comparison by Sector Groups\n\n\nCode\n#Firm size comparison in the sectors; agriculture, construction, industry and services.\noptions(dplyr.summarise.inform = FALSE)\nsectorinf_data <- readRDS(\"docs/Project_Data/sector_information.rds\")\n\ntable_sectorinf <- sectorinf_data %>%\n  filter(number == 'Number_of_companies') %>%\n  filter(size != 'Total') %>%\n  group_by(group,size) %>%\n  mutate(\"num_of_companies\") %>%\n  summarise(num_of_companies=sum(value)) %>%\n  arrange(group,desc(size))\n\ntable_sectorinf\n\n\n# A tibble: 16 × 3\n# Groups:   group [4]\n   group        size   num_of_companies\n   <chr>        <chr>             <dbl>\n 1 Agriculture  Small             18265\n 2 Agriculture  Micro             94969\n 3 Agriculture  Medium             3398\n 4 Agriculture  Large               489\n 5 Construction Small            307612\n 6 Construction Micro            982200\n 7 Construction Medium            58513\n 8 Construction Large              8144\n 9 Industry     Small            471473\n10 Industry     Micro            995452\n11 Industry     Medium           152032\n12 Industry     Large             45049\n13 Services     Small           1255079\n14 Services     Micro           4300865\n15 Services     Medium           260793\n16 Services     Large             55289\n\n\nCode\ntable_sectorinf %>%\n  ggplot(aes(x=group,y=num_of_companies, fill=size)) + \n  geom_bar(stat='identity', position='dodge') +\n  xlab(\"Number of companies\") +\n  ylab(\"Sector group\")\n\n\n\n\n\n\n\nCode\n#Firm size comparison by sector names as a detailed version.\ntable_sectordetail <- sectorinf_data %>%\n  filter(number == 'Number_of_companies') %>%\n  filter(size != 'Total') %>%\n  group_by(sector_name, size) %>%\n  mutate(\"num_of_companies\") %>%\n  summarise(num_of_companies=sum(value)) %>%\n  arrange(sector_name,desc(size))\n\ntable_sectordetail\n\n\n# A tibble: 68 × 3\n# Groups:   sector_name [17]\n   sector_name               size   num_of_companies\n   <chr>                     <chr>             <dbl>\n 1 Accomodation_Food         Small            109977\n 2 Accomodation_Food         Micro            313604\n 3 Accomodation_Food         Medium            20495\n 4 Accomodation_Food         Large              3995\n 5 Administrative_Activities Small             63121\n 6 Administrative_Activities Micro            248544\n 7 Administrative_Activities Medium            27225\n 8 Administrative_Activities Large             10489\n 9 Agriculture               Small             18265\n10 Agriculture               Micro             94969\n# … with 58 more rows\n\n\nCode\ntable_sectordetail %>%\n  ggplot(aes(y=sector_name,x=num_of_companies, fill=size)) + \n  geom_bar(stat='identity', position='dodge') +\n  xlab(\"Number of companies\") +\n  ylab(\"Detailed sector group\")"
  },
  {
    "objectID": "project_report.html",
    "href": "project_report.html",
    "title": "4  Project Report",
    "section": "",
    "text": "Financial Overview of Turkish Economy\nIn this report, an analysis of sectoral financial developments in Turkey for the period between 2009-2021 using various datasets from TURKSTAT is presented. Widely used financial metrics are employed in our analysis in order to overview financial position of real sector in Turkish economy. These metrics are then used to construct a Financial Fragility Index in an attempt to gauge financial soundness of each sector compared to each other.\nDatasets we used in our analysis are as follows:"
  },
  {
    "objectID": "project_report.html#introduction",
    "href": "project_report.html#introduction",
    "title": "4  Project Report",
    "section": "Introduction",
    "text": "Introduction\nFinancial overview of Turkish real sector firms is aimed to be presented through financial statements within a simple framework. A special emphasis is given to Covid-19 period to determine how financial indicators of sectors are affected from the pandemic."
  },
  {
    "objectID": "project_report.html#key-takeaways",
    "href": "project_report.html#key-takeaways",
    "title": "4  Project Report",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nReal sector firms are observed to rely more on liability sources and the economy as a whole has become more leveraged in this period, which is considered a natural result of credit oriented policies for the last decade in the Turkish Economy.\nLiquidity position of the firms deteriorated in this period although a slight correction is observed in the last few years. Transportation, Accomodation-Food, Real Estate and Professional Activities are the sectors whose liquidity position deteriorate most during Covid-19.\nProfitability of real sector firms stayed on the positive territory although it followed a volatile pattern throughout the period. During Covid-19, the winners are Mining, Manufacturing, Information and Health in terms of improvement in their profits and this improvement seemed to continue in 2021. On the opposite end of the picture, Transportation and Services sectors were seen to be in trouble in terms of profitability.\nLeverage of real sector firms increase in a synchronised way whereas variation across sectors increases significantly for liquidity and profitability indicators.\nFor 2021, a cross sectional analysis demonstrates that services related sectors are considered most risky in terms of financial metrics defined. To be specific, Education is considered most risky sector mostly due to its poor liquidity and high leverage which increases the firms’ probability of default as it raises doubts about payment of short term debts."
  },
  {
    "objectID": "project_report.html#financial-metrics",
    "href": "project_report.html#financial-metrics",
    "title": "4  Project Report",
    "section": "Financial Metrics",
    "text": "Financial Metrics\n\n\nCode\nbs_df_new <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets))\n\nbs_df_new <- bs_df_new %>% \n  pivot_longer(cols = c(\"current_ratio\", \"leverage\", \"return_on_equity\", \"return_on_assets\"), \n               names_to = \"Indicator\", \n               values_to = \"Value\")\n\n\nIn this section, we introduce three main financial indicators to be used in out analysis:\n1) Liquidity Indicator:\nLiquidity is a measure of a company’s ability to pay off its short-term liabilities—those that will come due in less than a year. Current Ratio is calculated as liquidity indicator as below:\n\\(Current\\,Ratio = \\frac{Current\\,Assets}{Short\\,Term\\,Liabilities}\\)\nA higher ratio indicates the business is more capable of paying off its short-term debts. These ratios will differ according to the industry, but in general ratios from 1.5 to 2.5 is acceptable. Lower ratios could indicate liquidity problems, while higher ones could signal there may be too much working capital tied up in inventory.\n2) Leverage Indicator:\nA leverage ratio is any one of several financial measurements that look at how much capital comes in the form of debt (loans) or assesses the ability of a company to meet its financial obligations. Ratio of total loans to total assets is used in our analysis to observe the reliance on liabilities.\n\\(Leverage = \\frac{Total\\,Loans}{Total\\,Assets}\\)\n3) Profitability Indicator:\nReturn on assets (ROA) is used in our analysis as a profitability indicator which refers to a financial ratio that indicates how profitable a company is in relation to its total assets. Market participants use ROA to see how well a company uses its assets to generate profit. Our calculation is based on the formula given below:\n\\(Return\\,on\\,Assets = \\frac{Net\\,Profit}{Total\\,Assets}\\)\n\nGeneral Overview\nReal sector firms are observed to rely more on liability sources and the economy as a whole has become more leveraged in this period, which is considered a natural result of credit oriented policies for the last decade in the Turkish Economy.\nLiquidity position of the firms deteriorated in this period although a slight correction is observed in the last few years.\nProfitability of real sector firms stayed on the positive territory although it followed a volatile pattern throughout the period.\n\n\nCode\n#Calculation and plot of weighted average financial indicators\nbs_df_economy <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets), Total_assets)\n\n\nbs_df_economy_graph <- bs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = weighted.mean(current_ratio, Total_assets) * 100,\n            Leverage = weighted.mean(leverage, Total_assets) * 100,\n            Profitability = weighted.mean(return_on_assets, Total_assets) * 100)\n\nbs_df_economy_graph %>% \n  pivot_longer(-year, names_to = \"indicator_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~indicator_yearly, scales = \"free\") +\n  theme_bw() +\n  labs(y = \"Levels\", title = \"Weighted Average of Financial Indicators\")\n\n\n\n\n\nCode\n#Calculation and plot of standard deviation of financial indicators\nbs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = sd(current_ratio) * 10,\n            Leverage = sd(leverage) * 10,\n            Profitability = sd(return_on_assets) * 10) %>% \n  pivot_longer(-year, names_to = \"std_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~std_yearly, scales = \"free\") +\n  theme_bw()+\n  labs(y = \"Levels\", title = \"Standard Deviation of Financial Indicators\")\n\n\n\n\n\n\n\nSectoral Overview\nConstruction, Mining, Information and Manufacturing are the sectors which have an upward trend in their liquidity position and deemed strong in terms of its level as of 2021 as compared to others.\nLeverage of real sector firms increased significantly in this period except Construction and Electricity-Gas sectors, which lowers the share of external liabilities in the financing of their assets and can be considered less risky as compared to the beginnning of the period.\nIn terms of ability to return assets into profits, winner sectors are Manufacturing, Information and Mining where as the harming effect of the COVID-19 is observed in Accomodation-Food, Entertainment and Transportation which is not surprising as these sectors are more dependent on social mobility and the recovery in the period after March-2020 is only gradual. A more benign picture can be observed in 2022 when a complete normalisation in Covid related restrictive policies has been observed. Furthermore, a consistent deterioration in the profits of Construction sector is eye-catching.\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"current_ratio\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Liquidity Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"leverage\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Leverage Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"return_on_assets\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Profitability (ROA) Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nDensity plots make it possible to observe complete distribution of indicators among sectors in a specific year. In the plots below, distributions are segmented by colors with respect to 25th, 50th and 75th percentiles where white shaded region denotes sectors that are below the 25th percentile and dark blue region corresponds to sectors above 75th percentile of the distribution with respect to the financial indicator.\nFor liquidity, the distribution seems to became right skewed at the end of 2021 vs its left skewed shape back in 2009 which implies that firms’ liquidity position decreases on average while there exists sectors that are in a stronger position in terms of liquidity.\nFor leverage, aside from increasing median leverage among sectors, no significant change in the shape of the distribution is observed.\nFor profitability, the obvious picture is that deviation of profitability across sectors increased considerably. Pandemic shock resulted in higher portion of sectors within the economy incurring higher net losses in 2020 as compared to 2019. Although a rebound is expected in profitability of sectors in 2021, distribution presents a different picture where a clear separation between sectors exist such that sectors in loss at the end of 2020 incur higher losses. On the other hand, the gains of some sectors increased comparatively higher in this period and the distribution became flat with outliers in the both end.\n\n\nCode\n# Liquidity\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, current_ratio) %>% \n  arrange(year) %>% \n  ggplot(aes(x = current_ratio, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Liquidity\")\n\n\n\n\n\nCode\n# Leverage\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, leverage) %>% \n  arrange(year) %>% \n  ggplot(aes(x = leverage, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Leverage\")\n\n\n\n\n\nCode\n# Profitability\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, return_on_assets) %>% \n  arrange(year) %>% \n  ggplot(aes(x = return_on_assets, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") + \n  labs(y = \"Year\", x = \"Return on Assets\")\n\n\n\n\n\n\n\nCovid-19 Shock and Sectoral Financial Developments\nA closer look for the perfomance of Turkish economy in the last two years is aimed to be investigated in comparison to previous years. 2020 and 2021 is important especially for diagnosing the effect of Covid-19 outbreak and its consequent impact on the financial status of real sector firms.\nFirstly, Transportation, Accomodation-Food, Real Estate and Professional Activities are the sectors whose liquidity position deteriorate most during Covid-19. This result is not abnormal as social distancing measures and decline in mobility affect those sectors most.The rest seems to be less affected and even there are sectors who experience a considerable improvement in terms of liquidity which might be due to frequency of our data. The covid-19 outbreak started in first quarter of 2020 and then the government policies to support the economy could be one reason for the improvement of the sectors.\nSecondly, leverage indicator seemed to rise throughout the economy except a few sectors which is considered natural in response to credit oriented policies of government to support real sector firms against Covid-19 shock.\nFinally, the winners are Mining, Manufacturing, Information and Health in terms of improvement in their profits and this improvement seemed to continue in 2021. On the other end of the picture, Transportation and Services sectors were seen to be in trouble in terms of profitability.\n\n\nCode\n#Liquidity Indicator\nbs_df_average <-  bs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2009:2019) %>% \n  group_by(sector_name) %>% \n  summarise(liq_ave = mean(current_ratio), lev_ave = mean(leverage), pro_ave = mean(return_on_assets))\n\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, current_ratio)) %>% \n  pivot_wider(names_from = year, values_from = current_ratio) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"liq_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"liq_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Current Ratio\", x = \"Sectors\", title = \"Liquidity Indicator\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\n\n\nCode\n#Leverage Indicator\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, leverage)) %>% \n  pivot_wider(names_from = year, values_from = leverage) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"lev_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"lev_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Leverage\", x = \"Sectors\", title = \"Leverage Indicator\", fill = \"Years\") + theme_bw() \n\n\n\n\n\n\n\nCode\n#Profitability Indicator\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, return_on_assets)) %>% \n  pivot_wider(names_from = year, values_from = return_on_assets) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"pro_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"pro_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Profitability\", x = \"Sectors\", title = \"Return on Assets\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\n\n\nFinancial Fragility Index (FFI)\nUp until now, financial position of Turkish economy is evaluated based on the three indicators obtained through balance sheets and income statements of sectors. In this section, an index demonstrating financial healthiness of the sectors is constructed so that a comparative analysis of Turkish economy through time can be conducted on a holistic perspective.\nThe methodology used in the construction of Financial Fragility Index (FFI) consists of the following steps:\n\nFor each financial indicator (Liquidity, Leverage and Profitability) percentile of each sector is found. To be more specific, the higher the rank of a sector, the worse it is in terms of financial soundness. In other words, for liquidity, the sector is less liquid, for leverage, the sector has higher leverage and for profitability, the sector is less profitable.\nAfter finding each sectors’ rank for each financial indicator, simple average is calculated and index value is obtained.\nThe steps described above is repeated for each year between 2009-2021 and a time series of the index is found.\n\nAlthough the index alone can not be taken into account alone to conclude that a certain sector is riskier than others financially for a specific time point, time series evolution gives a glimpse of where the sectors are heading into in terms of their financial strength.\nServices sectors such as Accomodation-Food, Real Estate and Transportation have performed worse than other sectors and found themselves in a much more fragile position in terms of financial soundness.\n\n\nCode\nbs_df_ffi <- bs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  group_by(year) %>% \n  mutate(liq_rank = percent_rank(current_ratio*-1), \n         lev_rank = percent_rank(leverage), \n         profit_rank = percent_rank(return_on_assets*-1)) %>% \n  mutate(fin_fra_index = (liq_rank + lev_rank + profit_rank)/3) %>% \n  select(-c(current_ratio:return_on_assets))\n\nbs_df_ffi %>% \n  select(c(sector_name, year, fin_fra_index)) %>% \n  pivot_longer(-c(sector_name, year), names_to = \"index\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() + \n  facet_wrap(~sector_name, scales = \"free\") + \n  labs(y = \"Financial Fragility Index\") +\n  theme_bw()\n\n\n\n\n\n\n\nFFI Scorecard for 2021\nFor 2021, a cross sectional analysis demonstrates that services related sectors are considered most risky in terms of financial metrics defined previously.\n\nEducation is considered most risky sector mostly due to its poor liquidity and high leverage which increases the firms’ probability of default as it raises doubts about payment of short term debts.\nMining sector is the leading sector in terms of financial soundness according to all of the predefined metrics.\n\n\n\nCode\nheatmap_df <- bs_df_economy %>% \n  filter(year == 2021) %>% \n  select(sector_name, current_ratio, leverage, return_on_assets) %>% \n  mutate(ffi = bs_df_ffi %>% select(year, sector_name, fin_fra_index) %>% filter(year == 2021) %>% pull(fin_fra_index)) %>% \n  arrange(desc(ffi)) \n\ncolnames(heatmap_df) <- c(\"Sectors\", \"Liquidity\", \"Leverage\", \"Profitability\", \"Financial Fragility Index\")\n\nheatmap_df[,2:5] <- lapply(heatmap_df[,2:5], FUN = function(x) round(x*100, 2))\n\nheatmap_df %>% \n  gt() %>% \n  data_color(columns = 'Liquidity', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,2]), max(heatmap_df[,2])))) %>% \n  data_color(columns = 'Leverage', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,3]), max(heatmap_df[,3])))) %>% \n  data_color(columns = 'Profitability', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,4]), max(heatmap_df[,4])))) %>% \n  data_color(columns = 'Financial Fragility Index', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,5]), max(heatmap_df[,5]))))\n\n\n\n\n\n\n  \n  \n    \n      Sectors\n      Liquidity\n      Leverage\n      Profitability\n      Financial Fragility Index\n    \n  \n  \n    Education\n85.13\n62.71\n2.67\n75.00\n    Entertainment\n97.87\n54.81\n-7.14\n72.92\n    Other_Services\n101.94\n67.83\n0.73\n72.92\n    Accomodation_Food\n93.09\n44.88\n-8.47\n70.83\n    Real_Estate\n89.10\n31.88\n-14.45\n66.67\n    Administrative_Activities\n103.79\n56.77\n1.25\n62.50\n    Electricity_Gas\n94.94\n34.52\n-8.61\n60.42\n    Transportation\n105.57\n38.05\n-9.90\n58.33\n    Construction\n128.66\n53.06\n-0.40\n52.08\n    Professional_Activities\n96.05\n35.40\n-0.28\n52.08\n    Water_Supply\n120.21\n54.04\n2.45\n47.92\n    Agriculture\n123.27\n51.61\n2.26\n43.75\n    Wholesale_Retail_Trade\n131.77\n62.30\n3.46\n43.75\n    Health\n116.63\n40.70\n4.27\n33.33\n    Manufacturing\n148.98\n48.01\n7.62\n22.92\n    Information\n157.52\n36.48\n7.10\n14.58\n    Mining\n166.78\n28.28\n14.86\n0.00\n  \n  \n  \n\n\n\n\n\n\nDoes International Trade Matter for Financial Strength?\nTradable sectors are determined with respect to their trade volume such that “Agriculture”, “Manufacturing”, “Mining”, “Water_Supply” are considered in this group with highest trade volume. The rest is grouped as Non-Tradable sectors.\nTwo groups are compared with respect to financial fragility index. Sectors that are more export/import oriented are found to be less vulnerable where as non-tradable sectors that has higher exposure to local markets are considered to be riskier.\n\n\nCode\ntradables <- c(\"Agriculture\", \"Manufacturing\", \"Mining\", \"Water_Supply\")\n\ndf_fin <- df_fin %>% inner_join(bs_df_ffi %>% select(sector_name, year, fin_fra_index), by = c(\"sector_name\", \"year\"))\n\ndf_fin %>% \n  select(-sector_code, -group) %>% \n  mutate(trade_group = ifelse(sector_name %in% tradables, \"tradable\", \"non_tradable\")) %>% \n  group_by(year, trade_group) %>% \n  summarize(financial_fragility_index = mean(fin_fra_index)) %>% \n  ggplot(aes(year, financial_fragility_index, color = trade_group)) + \n  geom_line() +\n  labs(x = \"Year\", y = \"Financial Fragility Index\")"
  },
  {
    "objectID": "project_report.html#conclusion",
    "href": "project_report.html#conclusion",
    "title": "4  Project Report",
    "section": "Conclusion",
    "text": "Conclusion\nTo sum up, Turkey has reached an average real growth rate of xx % for the period between 2009 and 2021. Credit oriented policies to finance growth and stimulate employment resulted in significant rise in leverage of Turkish firms. Besides, their liquidity positions deteriorate and profitabilities followed an oscillating pattern in the positive territory.\nFinancial Fragility Index points out that services sectors are financially most vulnerable to adverse shocks. Covid-19 period amplified their vulnerabilities. In this period, operations of companies become less profitable which is expected as volatility in financial markets increase and supply chain disruptions distort inventory management of companies on top of increasing production costs."
  },
  {
    "objectID": "project_report.html#shiny-application",
    "href": "project_report.html#shiny-application",
    "title": "4  Project Report",
    "section": "Shiny Application",
    "text": "Shiny Application\nShiny web application for Scorecard can be accessed via this link\nCommand Line for the Shinny Web Application is as follows:\n\n\nCode\nshiny::runGitHub(\"pjournal/mef06g-time-and-space\",subdir=\"app/\")"
  },
  {
    "objectID": "project_report.html#methodology-and-results",
    "href": "project_report.html#methodology-and-results",
    "title": "4  Project Report",
    "section": "Methodology and Results",
    "text": "Methodology and Results\n\n\nCode\nbs_df_new <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets))\n\nbs_df_new <- bs_df_new %>% \n  pivot_longer(cols = c(\"current_ratio\", \"leverage\", \"return_on_equity\", \"return_on_assets\"), \n               names_to = \"Indicator\", \n               values_to = \"Value\")\n\n\nIn this section, we introduce three main financial indicators to be used in our analysis.\n1) Liquidity Indicator:\nLiquidity is a measure of a company’s ability to pay off its short-term liabilities—those that will come due in less than a year. Current Ratio is calculated as liquidity indicator as below:\n\\(Current\\,Ratio = \\frac{Current\\,Assets}{Short\\,Term\\,Liabilities}\\)\nA higher ratio indicates the business is more capable of paying off its short-term debts. These ratios will differ according to the industry, but in general ratios from 1.5 to 2.5 is acceptable. Lower ratios could indicate liquidity problems, while higher ones could signal there may be too much working capital tied up in inventory.\n2) Leverage Indicator:\nA leverage ratio is any one of several financial measurements that look at how much capital comes in the form of debt (loans) or assesses the ability of a company to meet its financial obligations. Ratio of total loans to total assets is used in our analysis to observe the reliance on liabilities.\n\\(Leverage = \\frac{Total\\,Loans}{Total\\,Assets}\\)\n3) Profitability Indicator:\nReturn on assets (ROA) is used in our analysis as a profitability indicator which refers to a financial ratio that indicates how profitable a company is in relation to its total assets. Market participants use ROA to see how well a company uses its assets to generate profit. Our calculation is based on the formula given below:\n\\(Return\\,on\\,Assets = \\frac{Net\\,Profit}{Total\\,Assets}\\)\n\nGeneral Overview\nReal sector firms are observed to rely more on liability sources and the economy as a whole has become more leveraged in this period, which is considered a natural result of credit oriented policies for the last decade in the Turkish Economy.\nLiquidity position of the firms deteriorated in this period although a slight correction is observed in the last few years.\nProfitability of real sector firms stayed on the positive territory although it followed a volatile pattern throughout the period.\n\n\nCode\n#Calculation and plot of weighted average financial indicators\nbs_df_economy <- bs_df %>% \n  mutate(current_ratio = bs_df$\"I-Current_assets\" / bs_df$\"III-Short-term_liabilities\", \n         leverage = bs_df$\"III-Short-term_liabilities\" / bs_df$\"Total_assets\",\n         return_on_equity = bs_df$\"net_income_is\" / bs_df$\"V-Own_funds\",\n         return_on_assets = bs_df$\"net_income_is\" / bs_df$\"Total_assets\") %>% \n  select(c(sector_code:year),c(current_ratio:return_on_assets), Total_assets)\n\n\nbs_df_economy_graph <- bs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = weighted.mean(current_ratio, Total_assets) * 100,\n            Leverage = weighted.mean(leverage, Total_assets) * 100,\n            Profitability = weighted.mean(return_on_assets, Total_assets) * 100)\n\nbs_df_economy_graph %>% \n  pivot_longer(-year, names_to = \"indicator_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~indicator_yearly, scales = \"free\") +\n  theme_bw() +\n  labs(y = \"Levels\", title = \"Weighted Average of Financial Indicators\")\n\n\n\n\n\nCode\n#Calculation and plot of standard deviation of financial indicators\nbs_df_economy %>% \n  group_by(year) %>% \n  summarize(Liquidity = sd(current_ratio) * 10,\n            Leverage = sd(leverage) * 10,\n            Profitability = sd(return_on_assets) * 10) %>% \n  pivot_longer(-year, names_to = \"std_yearly\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() +\n  facet_wrap(~std_yearly, scales = \"free\") +\n  theme_bw()+\n  labs(y = \"Levels\", title = \"Standard Deviation of Financial Indicators\")\n\n\n\n\n\n\n\nSectoral Overview\nConstruction, Mining, Information and Manufacturing are the sectors which have an upward trend in their liquidity position and deemed strong in terms of its level as of 2021 as compared to others.\nLeverage of real sector firms increased significantly in this period except Construction and Electricity-Gas sectors, which lowers the share of external liabilities in the financing of their assets and can be considered less risky as compared to the beginnning of the period.\nIn terms of ability to return assets into profits, winner sectors are Manufacturing, Information and Mining where as the harming effect of the COVID-19 is observed in Accomodation-Food, Entertainment and Transportation which is not surprising as these sectors are more dependent on social mobility and the recovery in the period after March-2020 is only gradual. A more benign picture can be observed in 2022 when a complete normalisation in Covid related restrictive policies has been observed. Furthermore, a consistent deterioration in the profits of Construction sector is eye-catching.\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"current_ratio\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Liquidity Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"leverage\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Leverage Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nCode\nggplot(data = bs_df_new[bs_df_new$Indicator == \"return_on_assets\",], aes(x = year, y = Value)) +\n  geom_line() +\n  labs(title = \"Profitability (ROA) Indicator of Real Sector Companies from 2009 to 2021\", x = \"Year\") +\n  facet_wrap(~sector_name, scales = \"free\") +\n  theme(panel.grid = element_blank()) +\n  theme_bw()\n\n\n\n\n\nDensity plots make it possible to observe complete distribution of indicators among sectors in a specific year. In the plots below, distributions are segmented by colors with respect to 25th, 50th and 75th percentiles where white shaded region denotes sectors that are below the 25th percentile and dark blue region corresponds to sectors above 75th percentile of the distribution with respect to the financial indicator.\nFor liquidity, the distribution seems to became right skewed at the end of 2021 vs its left skewed shape back in 2009 which implies that firms’ liquidity position decreases on average while there exists sectors that are in a stronger position in terms of liquidity.\nFor leverage, aside from increasing median leverage among sectors, no significant change in the shape of the distribution is observed.\nFor profitability, the obvious picture is that deviation of profitability across sectors increased considerably. Pandemic shock resulted in higher portion of sectors within the economy incurring higher net losses in 2020 as compared to 2019. Although a rebound is expected in profitability of sectors in 2021, distribution presents a different picture where a clear separation between sectors exist such that sectors in loss at the end of 2020 incur higher losses. On the other hand, the gains of some sectors increased comparatively higher in this period and the distribution became flat with outliers in the both end.\n\n\nCode\n# Liquidity\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, current_ratio) %>% \n  arrange(year) %>% \n  ggplot(aes(x = current_ratio, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Liquidity\")\n\n\n\n\n\nCode\n# Leverage\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, leverage) %>% \n  arrange(year) %>% \n  ggplot(aes(x = leverage, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") +\n  labs(y = \"Year\", x = \"Leverage\")\n\n\n\n\n\nCode\n# Profitability\nbs_df_new %>% pivot_wider(names_from = Indicator, values_from = Value) %>% \n  select(year, return_on_assets) %>% \n  arrange(year) %>% \n  ggplot(aes(x = return_on_assets, y = factor(year), fill = stat(quantile))) +\n  stat_density_ridges(quantile_lines = FALSE,\n                      calc_ecdf = TRUE,\n                      geom = \"density_ridges_gradient\", rel_min_height = 0.005) +\n  scale_fill_brewer(name = \"\") + \n  labs(y = \"Year\", x = \"Return on Assets\")\n\n\n\n\n\n\n\nCovid-19 Shock and Sectoral Financial Developments\nA closer look for the perfomance of Turkish economy in the last two years is aimed to be investigated in comparison to previous years. 2020 and 2021 is important especially for diagnosing the effect of Covid-19 outbreak and its consequent impact on the financial status of real sector firms.\nFirstly, Transportation, Accomodation-Food, Real Estate and Professional Activities are the sectors whose liquidity position deteriorate most during Covid-19. This result is not abnormal as social distancing measures and decline in mobility affect those sectors most.The rest seems to be less affected and even there are sectors who experience a considerable improvement in terms of liquidity which might be due to frequency of our data. The covid-19 outbreak started in first quarter of 2020 and then the government policies to support the economy could be one reason for the improvement of the sectors.\nSecondly, leverage indicator seemed to rise throughout the economy except a few sectors which is considered natural in response to credit oriented policies of government to support real sector firms against Covid-19 shock.\nFinally, the winners are Mining, Manufacturing, Information and Health in terms of improvement in their profits and this improvement seemed to continue in 2021. On the other end of the picture, Transportation and Services sectors were seen to be in trouble in terms of profitability.\n\n\nCode\n#Liquidity Indicator\nbs_df_average <-  bs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2009:2019) %>% \n  group_by(sector_name) %>% \n  summarise(liq_ave = mean(current_ratio), lev_ave = mean(leverage), pro_ave = mean(return_on_assets))\n\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, current_ratio)) %>% \n  pivot_wider(names_from = year, values_from = current_ratio) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"liq_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"liq_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Current Ratio\", x = \"Sectors\", title = \"Liquidity Indicator\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\n\n\nCode\n#Leverage Indicator\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, leverage)) %>% \n  pivot_wider(names_from = year, values_from = leverage) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"lev_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"lev_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Leverage\", x = \"Sectors\", title = \"Leverage Indicator\", fill = \"Years\") + theme_bw() \n\n\n\n\n\n\n\nCode\n#Profitability Indicator\nbs_df_new %>% \n  pivot_wider(names_from = Indicator, values_from = Value) %>% \n  filter(year %in% 2020:2021) %>% \n  select(c(sector_name, year, return_on_assets)) %>% \n  pivot_wider(names_from = year, values_from = return_on_assets) %>% \n  left_join(bs_df_average[,c(\"sector_name\", \"pro_ave\")], by = \"sector_name\") %>% \n  rename(\"2009_2019_average\" = \"pro_ave\") %>% \n  pivot_longer(-sector_name, names_to = \"period\") %>% \n  ggplot(aes(x = sector_name, y = value, fill = factor(period))) +\n  geom_col(position = \"dodge2\")+\n  coord_flip() +\n  labs(y = \"Profitability\", x = \"Sectors\", title = \"Return on Assets\", fill = \"Years\") +\n  theme_bw()\n\n\n\n\n\n\n\nFinancial Fragility Index (FFI)\nUp until now, financial position of Turkish economy is evaluated based on the three indicators obtained through balance sheets and income statements of sectors. In this section, an index demonstrating financial healthiness of the sectors is constructed so that a comparative analysis of Turkish economy through time can be conducted on a holistic perspective.\nThe methodology used in the construction of Financial Fragility Index (FFI) consists of the following steps:\n\nFor each financial indicator (Liquidity, Leverage and Profitability) percentile of each sector is found. To be more specific, the higher the rank of a sector, the worse it is in terms of financial soundness. In other words, for liquidity, the sector is less liquid, for leverage, the sector has higher leverage and for profitability, the sector is less profitable.\nAfter finding each sectors’ rank for each financial indicator, simple average is calculated and index value is obtained.\nThe steps described above is repeated for each year between 2009-2021 and a time series of the index is found.\n\nAlthough the index alone can not be taken into account alone to conclude that a certain sector is riskier than others financially for a specific time point, time series evolution gives a glimpse of where the sectors are heading into in terms of their financial strength.\nServices sectors such as Accomodation-Food, Real Estate and Transportation have performed worse than other sectors and found themselves in a much more fragile position in terms of financial soundness.\n\n\nCode\nbs_df_ffi <- bs_df_new %>% \n  pivot_wider(names_from = \"Indicator\", values_from = \"Value\") %>% \n  group_by(year) %>% \n  mutate(liq_rank = percent_rank(current_ratio*-1), \n         lev_rank = percent_rank(leverage), \n         profit_rank = percent_rank(return_on_assets*-1)) %>% \n  mutate(fin_fra_index = (liq_rank + lev_rank + profit_rank)/3) %>% \n  select(-c(current_ratio:return_on_assets))\n\nbs_df_ffi %>% \n  select(c(sector_name, year, fin_fra_index)) %>% \n  pivot_longer(-c(sector_name, year), names_to = \"index\", values_to = \"value\") %>% \n  ggplot(aes(x = year, y = value)) +\n  geom_line() + \n  facet_wrap(~sector_name, scales = \"free\") + \n  labs(y = \"Financial Fragility Index\") +\n  theme_bw()\n\n\n\n\n\n\n\nFinancial Risk Scorecard in 2021\nFor 2021, a cross sectional analysis demonstrates that services related sectors are considered most risky in terms of financial metrics defined previously.\n\nEducation is considered most risky sector mostly due to its poor liquidity and high leverage which increases the firms’ probability of default as it raises doubts about payment of short term debts.\nMining sector is the leading sector in terms of financial soundness according to all of the predefined metrics.\n\nFurther details regarding the whole period of 2009-2021 can be gained through the scorecard Application.\n\n\nCode\nheatmap_df <- bs_df_economy %>% \n  filter(year == 2021) %>% \n  select(sector_name, current_ratio, leverage, return_on_assets) %>% \n  mutate(ffi = bs_df_ffi %>% select(year, sector_name, fin_fra_index) %>% filter(year == 2021) %>% pull(fin_fra_index)) %>% \n  arrange(desc(ffi)) \n\ncolnames(heatmap_df) <- c(\"Sectors\", \"Liquidity\", \"Leverage\", \"Profitability\", \"Financial Fragility Index\")\n\nheatmap_df[,2:5] <- lapply(heatmap_df[,2:5], FUN = function(x) round(x*100, 2))\n\nheatmap_df %>% \n  gt() %>% \n  data_color(columns = 'Liquidity', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,2]), max(heatmap_df[,2])))) %>% \n  data_color(columns = 'Leverage', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,3]), max(heatmap_df[,3])))) %>% \n  data_color(columns = 'Profitability', \n             colors = col_numeric(palette = c(\"red\", \"white\", \"green\"), \n                                  domain = c(min(heatmap_df[,4]), max(heatmap_df[,4])))) %>% \n  data_color(columns = 'Financial Fragility Index', \n             colors = col_numeric(palette = c(\"green\", \"white\", \"red\"), \n                                  domain = c(min(heatmap_df[,5]), max(heatmap_df[,5]))))\n\n\n\n\n\n\n  \n  \n    \n      Sectors\n      Liquidity\n      Leverage\n      Profitability\n      Financial Fragility Index\n    \n  \n  \n    Education\n85.13\n62.71\n2.67\n75.00\n    Entertainment\n97.87\n54.81\n-7.14\n72.92\n    Other_Services\n101.94\n67.83\n0.73\n72.92\n    Accomodation_Food\n93.09\n44.88\n-8.47\n70.83\n    Real_Estate\n89.10\n31.88\n-14.45\n66.67\n    Administrative_Activities\n103.79\n56.77\n1.25\n62.50\n    Electricity_Gas\n94.94\n34.52\n-8.61\n60.42\n    Transportation\n105.57\n38.05\n-9.90\n58.33\n    Construction\n128.66\n53.06\n-0.40\n52.08\n    Professional_Activities\n96.05\n35.40\n-0.28\n52.08\n    Water_Supply\n120.21\n54.04\n2.45\n47.92\n    Agriculture\n123.27\n51.61\n2.26\n43.75\n    Wholesale_Retail_Trade\n131.77\n62.30\n3.46\n43.75\n    Health\n116.63\n40.70\n4.27\n33.33\n    Manufacturing\n148.98\n48.01\n7.62\n22.92\n    Information\n157.52\n36.48\n7.10\n14.58\n    Mining\n166.78\n28.28\n14.86\n0.00\n  \n  \n  \n\n\n\n\n\n\nDoes International Trade Matter for Financial Strength?\nTradable sectors are determined with respect to their trade volume such that “Agriculture”, “Manufacturing”, “Mining”, “Water_Supply” are considered in this group with highest trade volume. The rest is grouped as Non-Tradable sectors.\nTwo groups are compared with respect to financial fragility index. Sectors that are more export/import oriented are found to be less vulnerable where as non-tradable sectors that has higher exposure to local markets are considered to be riskier.\n\n\nCode\ntradables <- c(\"Agriculture\", \"Manufacturing\", \"Mining\", \"Water_Supply\")\n\ndf_fin <- df_fin %>% inner_join(bs_df_ffi %>% select(sector_name, year, fin_fra_index), by = c(\"sector_name\", \"year\"))\n\ndf_fin %>% \n  select(-sector_code, -group) %>% \n  mutate(trade_group = ifelse(sector_name %in% tradables, \"tradable\", \"non_tradable\")) %>% \n  group_by(year, trade_group) %>% \n  summarize(financial_fragility_index = mean(fin_fra_index)) %>% \n  ggplot(aes(year, financial_fragility_index, color = trade_group)) + \n  geom_line() +\n  labs(x = \"Year\", y = \"Financial Fragility Index\")"
  },
  {
    "objectID": "project_report.html#references",
    "href": "project_report.html#references",
    "title": "4  Project Report",
    "section": "References",
    "text": "References\n\nhttps://www.investopedia.com/terms/l/liquidity.asp\nhttps://www.investopedia.com/terms/l/leverage.asp\nhttps://www.investopedia.com/terms/r/returnonassets.asp#toc-understanding-return-on-assets-roa\nhttps://stackoverflow.com/"
  },
  {
    "objectID": "Presentation.html",
    "href": "Presentation.html",
    "title": "5  Presentation",
    "section": "",
    "text": "You can access the presentation titled “Financial Overview of Turkish Economy” from this link."
  }
]